{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/Profile/components/Timeline/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'utils/axios';\nimport { AddPost, PostCard } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  posts: {\n    marginTop: theme.spacing(2)\n  },\n  post: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst Timeline = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchPosts = () => {\n      axios.get('/api/users/1/posts').then(response => {\n        if (mounted) {\n          setPosts(response.data.posts);\n        }\n      });\n    };\n    fetchPosts();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(AddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.posts,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        className: classes.post,\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"0IrisdAEFk18bWZ8wxUF2aI0j/Y=\", false, function () {\n  return [useStyles];\n});\n_c = Timeline;\nTimeline.propTypes = {\n  className: PropTypes.string\n};\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","axios","AddPost","PostCard","useStyles","theme","root","posts","marginTop","spacing","post","marginBottom","Timeline","props","className","rest","classes","setPosts","mounted","fetchPosts","get","then","response","data","map","id","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/Profile/components/Timeline/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { AddPost, PostCard } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  posts: {\n    marginTop: theme.spacing(2)\n  },\n  post: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Timeline = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchPosts = () => {\n      axios.get('/api/users/1/posts').then(response => {\n        if (mounted) {\n          setPosts(response.data.posts);\n        }\n      });\n    };\n\n    fetchPosts();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <AddPost />\n      <div className={classes.posts}>\n        {posts.map(post => (\n          <PostCard\n            className={classes.post}\n            key={post.id}\n            post={post}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nTimeline.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Timeline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAAC;AAE/C,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;EACrCC,IAAI,EAAE,CAAC,CAAC;EACRC,KAAK,EAAE;IACLC,SAAS,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC;EAC5B,CAAC;EACDC,IAAI,EAAE;IACJC,YAAY,EAAEN,KAAK,CAACI,OAAO,CAAC,CAAC;EAC/B;AACF,CAAC,CAAC,CAAC;AAEH,MAAMG,QAAQ,GAAGC,KAAK,IAAI;EAAA;EACxB,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGF,KAAK;EAEpC,MAAMG,OAAO,GAAGZ,SAAS,EAAE;EAC3B,MAAM,CAACG,KAAK,EAAEU,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIqB,OAAO,GAAG,IAAI;IAElB,MAAMC,UAAU,GAAG,MAAM;MACvBlB,KAAK,CAACmB,GAAG,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAC/C,IAAIJ,OAAO,EAAE;UACXD,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAChB,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDY,UAAU,EAAE;IAEZ,OAAO,MAAM;MACXD,OAAO,GAAG,KAAK;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,GACMH,IAAI;IACR,SAAS,EAAEhB,IAAI,CAACiB,OAAO,CAACV,IAAI,EAAEQ,SAAS,CAAE;IAAA,wBAEzC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX;MAAK,SAAS,EAAEE,OAAO,CAACT,KAAM;MAAA,UAC3BA,KAAK,CAACiB,GAAG,CAACd,IAAI,iBACb,QAAC,QAAQ;QACP,SAAS,EAAEM,OAAO,CAACN,IAAK;QAExB,IAAI,EAAEA;MAAK,GADNA,IAAI,CAACe,EAAE;QAAA;QAAA;QAAA;MAAA,QAGf;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzCIb,QAAQ;EAAA,QAGIR,SAAS;AAAA;AAAA,KAHrBQ,QAAQ;AA2CdA,QAAQ,CAACc,SAAS,GAAG;EACnBZ,SAAS,EAAEhB,SAAS,CAAC6B;AACvB,CAAC;AAED,eAAef,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}