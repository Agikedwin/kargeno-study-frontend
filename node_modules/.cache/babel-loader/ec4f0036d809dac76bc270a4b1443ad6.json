{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/ProjectManagementList/ProjectManagementList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { Page, Paginate, SearchBar } from 'components';\nimport { Header, ProjectCard } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\nconst ProjectManagementList = () => {\n  _s();\n  const classes = useStyles();\n  const [rowsPerPage] = useState(10);\n  const [page] = useState(0);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchProjects = () => {\n      axios.get('/api/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n    fetchProjects();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: classes.root,\n    title: \"Project Management List\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onFilter: handleFilter,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.results,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        variant: \"body2\",\n        children: [projects.length, \" Records found. Page \", page + 1, \" of\", ' ', Math.ceil(projects.length / rowsPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paginate,\n      children: /*#__PURE__*/_jsxDEV(Paginate, {\n        pageCount: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectManagementList, \"gsN1pdJNVHeVclli7bZpnewhCFA=\", false, function () {\n  return [useStyles];\n});\n_c = ProjectManagementList;\nexport default ProjectManagementList;\nvar _c;\n$RefreshReg$(_c, \"ProjectManagementList\");","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Typography","axios","Page","Paginate","SearchBar","Header","ProjectCard","useStyles","theme","root","padding","spacing","results","marginTop","paginate","display","justifyContent","ProjectManagementList","classes","rowsPerPage","page","projects","setProjects","mounted","fetchProjects","get","then","response","data","handleFilter","handleSearch","length","Math","ceil","map","project","id"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/ProjectManagementList/ProjectManagementList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Page, Paginate, SearchBar } from 'components';\nimport { Header, ProjectCard } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst ProjectManagementList = () => {\n  const classes = useStyles();\n  const [rowsPerPage] = useState(10);\n  const [page] = useState(0);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      <div className={classes.results}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\"\n        >\n          {projects.length} Records found. Page {page + 1} of{' '}\n          {Math.ceil(projects.length / rowsPerPage)}\n        </Typography>\n        {projects.map(project => (\n          <ProjectCard\n            key={project.id}\n            project={project}\n          />\n        ))}\n      </div>\n      <div className={classes.paginate}>\n        <Paginate pageCount={3} />\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectManagementList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}