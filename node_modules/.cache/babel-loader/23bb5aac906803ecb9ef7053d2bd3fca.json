{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/DashboardAnalytics/components/EarningsSegmentation/EarningsSegmentation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Divider, Typography } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { GenericMoreButton } from 'components';\nimport { Chart } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  },\n  chartContainer: {\n    padding: theme.spacing(3)\n  },\n  chart: {\n    height: 281\n  },\n  statsContainer: {\n    display: 'flex'\n  },\n  statsItem: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\nconst EarningsSegmentation = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [earnings, setEarnings] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchEarnings = () => {\n      axios.get('/api/dashboard/earnings').then(response => {\n        if (mounted) {\n          setEarnings(response.data.earnings);\n        }\n      });\n    };\n    fetchEarnings();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(GenericMoreButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this),\n      title: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chartContainer,\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          className: classes.chart,\n          data: earnings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.statsContainer,\n        children: earnings.map(earning => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsItem,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            component: \"h6\",\n            gutterBottom: true,\n            variant: \"overline\",\n            children: earning.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            variant: \"h4\",\n            children: [earning.value, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, earning.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(EarningsSegmentation, \"Cc/pxvnskZHKpNKL2kp1EBpuV5c=\", false, function () {\n  return [useStyles];\n});\n_c = EarningsSegmentation;\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\nexport default EarningsSegmentation;\nvar _c;\n$RefreshReg$(_c, \"EarningsSegmentation\");","map":{"version":3,"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Card","CardHeader","CardContent","Divider","Typography","axios","GenericMoreButton","Chart","useStyles","theme","root","content","padding","paddingBottom","chartContainer","spacing","chart","height","statsContainer","display","statsItem","flexGrow","flexDirection","justifyContent","borderRight","palette","divider","EarningsSegmentation","props","className","rest","classes","earnings","setEarnings","mounted","fetchEarnings","get","then","response","data","map","earning","label","value","id","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/DashboardAnalytics/components/EarningsSegmentation/EarningsSegmentation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { GenericMoreButton } from 'components';\nimport { Chart } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  },\n  chartContainer: {\n    padding: theme.spacing(3)\n  },\n  chart: {\n    height: 281\n  },\n  statsContainer: {\n    display: 'flex'\n  },\n  statsItem: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst EarningsSegmentation = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [earnings, setEarnings] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchEarnings = () => {\n      axios.get('/api/dashboard/earnings').then(response => {\n        if (mounted) {\n          setEarnings(response.data.earnings);\n        }\n      });\n    };\n\n    fetchEarnings();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <div className={classes.chartContainer}>\n          <Chart\n            className={classes.chart}\n            data={earnings}\n          />\n        </div>\n        <Divider />\n        <div className={classes.statsContainer}>\n          {earnings.map(earning => (\n            <div\n              className={classes.statsItem}\n              key={earning.id}\n            >\n              <Typography\n                align=\"center\"\n                component=\"h6\"\n                gutterBottom\n                variant=\"overline\"\n              >\n                {earning.label}\n              </Typography>\n              <Typography\n                align=\"center\"\n                variant=\"h4\"\n              >\n                {earning.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}