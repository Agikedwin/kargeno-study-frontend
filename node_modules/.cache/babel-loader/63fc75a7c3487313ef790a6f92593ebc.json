{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/Profile/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { ProjectCard } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst Projects = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchProjects = () => {\n      if (mounted) {\n        axios.get('/api/users/1/projects').then(response => setProjects(response.data.projects));\n      }\n    };\n    fetchProjects();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        lx: 4,\n        md: 6,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"SLTPTDG2OM/zl0k1BtXCOzlDuu4=\", false, function () {\n  return [useStyles];\n});\n_c = Projects;\nProjects.propTypes = {\n  className: PropTypes.string\n};\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Grid","axios","ProjectCard","useStyles","root","Projects","props","className","rest","classes","projects","setProjects","mounted","fetchProjects","get","then","response","data","map","project","id","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/Profile/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { ProjectCard } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Projects = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      if (mounted) {\n        axios\n          .get('/api/users/1/projects')\n          .then(response => setProjects(response.data.projects));\n      }\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map(project => (\n          <Grid\n            item\n            key={project.id}\n            lg={4}\n            lx={4}\n            md={6}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,IAAI,QAAQ,mBAAmB;AAExC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,WAAW,QAAQ,YAAY;AAAC;AAEzC,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;EAClCK,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAAA;EACxB,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGF,KAAK;EAEpC,MAAMG,OAAO,GAAGN,SAAS,EAAE;EAC3B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIgB,OAAO,GAAG,IAAI;IAElB,MAAMC,aAAa,GAAG,MAAM;MAC1B,IAAID,OAAO,EAAE;QACXX,KAAK,CACFa,GAAG,CAAC,uBAAuB,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAIL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAACP,QAAQ,CAAC,CAAC;MAC1D;IACF,CAAC;IAEDG,aAAa,EAAE;IAEf,OAAO,MAAM;MACXD,OAAO,GAAG,KAAK;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,GACMJ,IAAI;IACR,SAAS,EAAEV,IAAI,CAACW,OAAO,CAACL,IAAI,EAAEG,SAAS,CAAE;IAAA,uBAEzC,QAAC,IAAI;MACH,SAAS;MACT,OAAO,EAAE,CAAE;MAAA,UAEVG,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACnB,QAAC,IAAI;QACH,IAAI;QAEJ,EAAE,EAAE,CAAE;QACN,EAAE,EAAE,CAAE;QACN,EAAE,EAAE,CAAE;QACN,EAAE,EAAE,EAAG;QAAA,uBAEP,QAAC,WAAW;UAAC,OAAO,EAAEA;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG,GAN5BA,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAQlB;IAAC;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAhDIf,QAAQ;EAAA,QAGIF,SAAS;AAAA;AAAA,KAHrBE,QAAQ;AAkDdA,QAAQ,CAACgB,SAAS,GAAG;EACnBd,SAAS,EAAEV,SAAS,CAACyB;AACvB,CAAC;AAED,eAAejB,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}