{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/UserRegister/components/Users/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport moment from 'moment';\nimport { DatePicker } from '@material-ui/pickers';\nimport { alpha } from '@material-ui/core/styles';\n\n//import { userActions} from '../../../../store/user-slice'\n//import { saveUsers, fetchUsers } from '../../../../store/user-actions'\n//import { useSelector, useDispatch} from 'react-redux';\n\n//import { CREATE_USER, REGISTER_USER2 } from '../../../../graphql/mutations/users';\n\nimport { FETCH_DESIGNATIONS } from '../../../../graphql/queries/access-level-query';\nimport { fetchAccessLevels, saveAccessLevel } from 'store/access-level-actions';\nimport { Button, Card, CardActions, CardContent, CardHeader, Grid, Divider, TextField, colors } from '@material-ui/core';\nimport SuccessSnackbar from '../SuccessSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\nconst Users = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [designations, setDesignations] = useState([]);\n  const [selectedDesignation, setSelectedDesignation] = useState([]);\n  const [selectedGender, setSelectedGender] = useState([]);\n  const initialValues = {\n    name: '',\n    tag: '',\n    tags: ['Full-Time', 'ReactJS'],\n    startDate: moment(),\n    endDate: moment().add(1, 'day')\n  };\n  const [values, setValues] = useState({\n    ...initialValues\n  });\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n  const [userDetails, setUserDetails] = useState({\n    firstName: '',\n    other_names: '',\n    email: '',\n    phone: '',\n    gender: '',\n    phone_number: '',\n    dob: '',\n    patient_identifier: '',\n    level_id: '',\n    designation_id: ''\n  });\n  const fetchDesignations = async () => {\n    await fetchAccessLevels(FETCH_DESIGNATIONS).then(res => {\n      console.log('Designations fetched ', res.data.getAllDesignations);\n      setDesignations(res.data.getAllDesignations);\n    });\n  };\n  useEffect(() => {\n    fetchDesignations();\n  }, []);\n\n  /*  const saveResData = async(event) => {\n    await saveAccessLevel(event,CREATE_DESIGNATIONS).then(res =>{\n      setAccessLevel([...designations, res.data.createDesignations]);\n    });\n  };\n  */\n  const handleSubmit = event => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n\n    //addUsers({ variables: userValues });\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setUserDetails({\n      ...userDetails,\n      [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    });\n  };\n  //const userValues = { username:'agik11', email:'agikedwin@gmail11.com', password:'agik11', confirmPassword:'agik11' };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = {\n        ...values\n      };\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n      newValues.tag = '';\n      return newValues;\n    });\n  };\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = {\n        ...values\n      };\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n      return newValues;\n    });\n  };\n  const handleCalendarOpen = trigger => {\n    setCalendarTrigger(trigger);\n  };\n  const handleCalendarChange = () => {};\n  const handleCalendarAccept = date => {\n    con;\n    setValues(values => ({\n      ...values,\n      [calendarTrigger]: date\n    }));\n  };\n  const handleCalendarClose = () => {\n    setCalendarTrigger(false);\n  };\n  const calendarOpen = Boolean(calendarTrigger);\n  const calendarMinDate = calendarTrigger === 'startDate' ? moment() : moment(values.startDate).add(1, 'day');\n  const calendarValue = values[calendarTrigger];\n  const genderTypes = ['Male', 'Female'];\n  const roles = ['Admin', 'User', 'Loanee', 'Others'];\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              helperText: \"Please specify the first name\",\n              label: \"First name\",\n              name: \"firstName\",\n              onChange: handleChange,\n              required: true,\n              value: userDetails.firstName,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Other names\",\n              name: \"other_names\",\n              onChange: handleChange,\n              required: true,\n              value: userDetails.other_names,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Email Address\",\n              name: \"email\",\n              onChange: handleChange,\n              required: true,\n              value: userDetails.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Phone Number\",\n              name: \"phone\",\n              onChange: handleChange,\n              type: \"text\",\n              value: userDetails.phone,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              className: classes.field,\n              fullWidth: true,\n              id: \"combo-box-demo\",\n              options: designations,\n              getOptionLabel: options => options.designation_name,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Designation\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 42\n              }, this),\n              onChange: (event, newValue) => {\n                console.log(newValue);\n                setSelectedDesignation(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              className: classes.field,\n              fullWidth: true,\n              id: \"combo-box-demo\",\n              options: genderTypes,\n              getOptionLabel: genderTypes => genderTypes,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Gender\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 42\n              }, this),\n              onChange: (event, newValue) => {\n                console.log(newValue);\n                setSelectedGender(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"PID\",\n              name: \"Patient Identifier\",\n              onChange: handleChange,\n              required: true,\n              value: userDetails.patient_identifier,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.dateField,\n              label: \"Start Date\",\n              name: \"startDate\",\n              onClick: () => handleCalendarOpen('startDate'),\n              value: moment(values.startDate).format('DD/MM/YYYY'),\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Password\",\n              name: \"password\",\n              onChange: handleChange,\n              type: \"text\",\n              value: userDetails.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.saveButton,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuccessSnackbar, {\n      onClose: handleSnackbarClose,\n      open: openSnackbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      minDate: calendarMinDate,\n      onAccept: handleCalendarAccept,\n      onChange: handleCalendarChange,\n      onClose: handleCalendarClose,\n      open: calendarOpen,\n      style: {\n        display: 'none'\n      } // Temporal fix to hide the input element\n      ,\n      value: calendarValue,\n      variant: \"dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"SVvWrToVZUyGrsMzBXaXz1MJVKg=\", false, function () {\n  return [useStyles];\n});\n_c = Users;\nUsers.propTypes = {\n  className: PropTypes.string\n  //user: PropTypes.object.isRequired\n};\n\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","clsx","PropTypes","makeStyles","Autocomplete","moment","DatePicker","alpha","FETCH_DESIGNATIONS","fetchAccessLevels","saveAccessLevel","Button","Card","CardActions","CardContent","CardHeader","Grid","Divider","TextField","colors","SuccessSnackbar","useStyles","theme","root","saveButton","color","palette","white","backgroundColor","green","Users","props","className","rest","classes","openSnackbar","setOpenSnackbar","designations","setDesignations","selectedDesignation","setSelectedDesignation","selectedGender","setSelectedGender","initialValues","name","tag","tags","startDate","endDate","add","values","setValues","calendarTrigger","setCalendarTrigger","userDetails","setUserDetails","firstName","other_names","email","phone","gender","phone_number","dob","patient_identifier","level_id","designation_id","fetchDesignations","then","res","console","log","data","getAllDesignations","handleSubmit","event","preventDefault","handleChange","persist","target","type","checked","value","handleFieldChange","field","handleTagAdd","newValues","includes","push","handleTagDelete","filter","t","handleCalendarOpen","trigger","handleCalendarChange","handleCalendarAccept","date","con","handleCalendarClose","calendarOpen","Boolean","calendarMinDate","calendarValue","genderTypes","roles","handleSnackbarClose","options","designation_name","params","newValue","dateField","format","password","display","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/UserRegister/components/Users/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport moment from 'moment';\nimport { DatePicker } from '@material-ui/pickers';\nimport { alpha } from '@material-ui/core/styles'\n\n\n\n//import { userActions} from '../../../../store/user-slice'\n//import { saveUsers, fetchUsers } from '../../../../store/user-actions'\n//import { useSelector, useDispatch} from 'react-redux';\n\n\n//import { CREATE_USER, REGISTER_USER2 } from '../../../../graphql/mutations/users';\n\nimport {  FETCH_DESIGNATIONS } from '../../../../graphql/queries/access-level-query';\n\nimport  {fetchAccessLevels, saveAccessLevel } from 'store/access-level-actions';\n\n\n\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nimport SuccessSnackbar from '../SuccessSnackbar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Users = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n\n  const [designations, setDesignations] = useState([]);\n  const [selectedDesignation, setSelectedDesignation] = useState([]);\n  const [selectedGender, setSelectedGender] = useState([]);\n\n  const initialValues = {\n    name: '',\n    tag: '',\n    tags: ['Full-Time', 'ReactJS'],\n    startDate: moment(),\n    endDate: moment().add(1, 'day')\n  };\n\n  const [values, setValues] = useState({ ...initialValues });\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n  \n\n  const [userDetails, setUserDetails] = useState({\n    firstName: '',\n    other_names: '',\n    email: '',\n    phone: '',\n    gender:'',\n    phone_number: '',\n    dob: '',\n    patient_identifier: '',\n    level_id:'',\n    designation_id:'',\n  });\n\n\n\n\n  const fetchDesignations = async () => {\n    await fetchAccessLevels(FETCH_DESIGNATIONS).then(res =>{  \n      console.log('Designations fetched ',res.data.getAllDesignations)\n      setDesignations(res.data.getAllDesignations) \n     \n    })\n  }\n\n  useEffect(() =>{\n    fetchDesignations();\n  },[])\n\n\n  /*  const saveResData = async(event) => {\n    await saveAccessLevel(event,CREATE_DESIGNATIONS).then(res =>{\n      setAccessLevel([...designations, res.data.createDesignations]);\n    });\n  };\n */\n  const handleSubmit = event => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n\n    //addUsers({ variables: userValues });\n  };\n\n\n\n\n  const handleChange = event => {\n    event.persist();\n\n    setUserDetails({\n      ...userDetails,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n  //const userValues = { username:'agik11', email:'agikedwin@gmail11.com', password:'agik11', confirmPassword:'agik11' };\n\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n\n  const handleCalendarOpen = trigger => {\n    setCalendarTrigger(trigger);\n  };\n\n  const handleCalendarChange = () => {};\n\n  const handleCalendarAccept = date => {\n    con\n    setValues(values => ({\n      ...values,\n      [calendarTrigger]: date\n    }));\n  };\n\n  const handleCalendarClose = () => {\n    setCalendarTrigger(false);\n  };\n\n  const calendarOpen = Boolean(calendarTrigger);\n  const calendarMinDate =\n    calendarTrigger === 'startDate'\n      ? moment()\n      : moment(values.startDate).add(1, 'day');\n  const calendarValue = values[calendarTrigger];\n  const genderTypes = ['Male', 'Female'];\n  const roles = ['Admin','User','Loanee','Others']\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"user\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={1}\n          >\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={userDetails.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Other names\"\n                name=\"other_names\"\n                onChange={handleChange}\n                required\n                value={userDetails.other_names}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n           \n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={userDetails.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"text\"\n                value={userDetails.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <Autocomplete\n                className={classes.field}\n                fullWidth\n                id=\"combo-box-demo\"\n                options={designations}\n                getOptionLabel={options => options.designation_name}\n                renderInput={(params) => <TextField {...params} label=\"Designation\"   variant=\"outlined\"/>}\n                onChange={(event, newValue) => {\n                  console.log(newValue);\n                  setSelectedDesignation(newValue);\n                }}\n            \n              />\n\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <Autocomplete\n                className={classes.field}\n                fullWidth\n                id=\"combo-box-demo\"\n                options={genderTypes}\n                getOptionLabel={genderTypes => genderTypes}\n                renderInput={(params) => <TextField {...params} label=\"Gender\"   variant=\"outlined\"/>}\n                onChange={(event, newValue) => {\n                  console.log(newValue);\n                  setSelectedGender(newValue);\n                }}\n                \n            \n              />\n            </Grid>\n\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"PID\"\n                name=\"Patient Identifier\"\n                onChange={handleChange}\n                required\n                value={userDetails.patient_identifier}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                className={classes.dateField}\n                label=\"Start Date\"\n                name=\"startDate\"\n                onClick={() => handleCalendarOpen('startDate')}\n                value={moment(values.startDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Password\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"text\"\n                value={userDetails.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n           \n           \n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n\n      <DatePicker\n        minDate={calendarMinDate}\n        onAccept={handleCalendarAccept}\n        onChange={handleCalendarChange}\n        onClose={handleCalendarClose}\n        open={calendarOpen}\n        style={{ display: 'none' }} // Temporal fix to hide the input element\n        value={calendarValue}\n        variant=\"dialog\"\n      />\n    </Card>\n  );\n};\n\nUsers.propTypes = {\n  className: PropTypes.string,\n  //user: PropTypes.object.isRequired\n};\n\n\nexport default Users\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}