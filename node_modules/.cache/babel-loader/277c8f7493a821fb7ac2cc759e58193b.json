{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/UserDetails/components/Summary/components/CustomerInfo/components/EnrollInProgram/EnrollInProgram.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Modal, Card, CardContent, CardActions, Grid, Typography, TextField, Switch, Button, colors } from '@material-ui/core';\nimport { boolean } from 'yup/lib/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\nconst EnrollInProgram = props => {\n  _s();\n  const {\n    open,\n    onClose,\n    user,\n    programs,\n    save,\n    className,\n    ...rest\n  } = props;\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n  const classes = useStyles();\n  const [formState, setFormState] = useState({\n    userId: '',\n    enrollStatus: false,\n    programId: '',\n    enrollment\n  });\n  if (!open) {\n    return null;\n  }\n  const handleFieldChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      ...rest,\n      className: clsx(classes.root, className),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            gutterBottom: true,\n            variant: \"h3\",\n            children: \"Enroll Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.container,\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                disabled: true,\n                fullWidth: true,\n                label: \"Surname\",\n                name: \"email\",\n                onChange: handleFieldChange,\n                value: user.surname,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                className: classes.field,\n                fullWidth: true,\n                id: \"combo-box-demo\",\n                options: programs,\n                getOptionLabel: programs => programs.programName,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Select Program\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 44\n                }, this),\n                onChange: (event, newValue) => {\n                  formState.programId = newValue.id;\n                  formState.userId = user._id;\n                  console.log('At auto programs', formState);\n\n                  // setTypeOptions(newValue);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"Consent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: \"The client consented to draw blood samples\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                checked: formState.enrollStatus,\n                color: \"secondary\",\n                edge: \"start\",\n                name: \"enrollStatus\",\n                onChange: handleFieldChange,\n                value: formState.enrollStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            variant: \"contained\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.saveButton,\n            onClick: () => {\n              save(formState);\n            },\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EnrollInProgram, \"HPVXGMOBQTyS0dxXv/TcvonrH9I=\", false, function () {\n  return [useStyles];\n});\n_c = EnrollInProgram;\nEnrollInProgram.displayName = 'Enroll In Program';\nEnrollInProgram.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nEnrollInProgram.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\nexport default EnrollInProgram;\nvar _c;\n$RefreshReg$(_c, \"EnrollInProgram\");","map":{"version":3,"names":["React","useState","clsx","PropTypes","makeStyles","Autocomplete","Modal","Card","CardContent","CardActions","Grid","Typography","TextField","Switch","Button","colors","boolean","useStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","container","marginTop","spacing","actions","justifyContent","saveButton","color","palette","white","backgroundColor","green","EnrollInProgram","props","open","onClose","user","programs","save","className","rest","calendarTrigger","setCalendarTrigger","classes","formState","setFormState","userId","enrollStatus","programId","enrollment","handleFieldChange","event","persist","target","name","type","checked","value","surname","field","programName","params","newValue","id","_id","console","log","displayName","propTypes","string","customer","any","func","bool","defaultProps"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/UserDetails/components/Summary/components/CustomerInfo/components/EnrollInProgram/EnrollInProgram.js"],"sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport {\n  Modal,\n  Card,\n  CardContent,\n  CardActions,\n  Grid,\n  Typography,\n  TextField,\n  Switch,\n  Button,\n  colors\n} from '@material-ui/core';\nimport { boolean } from 'yup/lib/locale';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EnrollInProgram = props => {\n  const { open, onClose, user, programs,save, className, ...rest } = props;\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    userId: '',\n    enrollStatus: false,\n    programId: '',\n    enrollment\n  });\n\n  if (!open) {\n    return null;\n  }\n\n\n\n  const handleFieldChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <form>\n          <CardContent>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              Enroll Client\n            </Typography>\n            <Grid\n              className={classes.container}\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={12}\n                xs={12}\n              >\n                <TextField\n                  disabled\n                  fullWidth\n                  label=\"Surname\"\n                  name=\"email\"\n                  onChange={handleFieldChange}\n                  value={user.surname} \n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={12}\n                xs={12}\n              >\n                <Autocomplete\n                  className={classes.field}\n                  fullWidth\n                  \n                  id=\"combo-box-demo\"\n                  options={programs}\n                  getOptionLabel={programs => programs.programName}\n                  renderInput={(params) => <TextField {...params} label=\"Select Program\"   variant=\"outlined\"/>}\n                  onChange={(event, newValue) => {\n             \n                    formState.programId = newValue.id;\n                    formState.userId = user._id\n                    \n                    console.log('At auto programs',formState);\n\n\n                  // setTypeOptions(newValue);\n                  }}\n              \n                />\n              </Grid>\n             \n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Consent</Typography>\n                <Typography variant=\"body2\">\n                  The client consented to draw blood samples\n                </Typography>\n                <Switch\n                  checked={formState.enrollStatus}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"enrollStatus\"\n                  onChange={handleFieldChange}\n                  value={formState.enrollStatus}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <Button\n              onClick={onClose}\n              variant=\"contained\"\n            >\n              Close\n            </Button>\n            <Button\n              className={classes.saveButton}\n              onClick={() => {\n                save(formState)\n              }}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n};\n\nEnrollInProgram.displayName = 'Enroll In Program';\n\nEnrollInProgram.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nEnrollInProgram.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default EnrollInProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}