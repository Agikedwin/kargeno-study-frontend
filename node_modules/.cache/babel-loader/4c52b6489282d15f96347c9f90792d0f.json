{"ast":null,"code":"import uuid from 'uuid/v1';\nimport moment from 'moment';\nimport mock from 'utils/mock';\nmock.onGet('/api/orders').reply(200, {\n  orders: [{\n    id: uuid(),\n    created_at: moment().subtract(10, 'minutes'),\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    payment: {\n      ref: 'FAD103',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(32, 'minutes').subtract(23, 'seconds'),\n    customer: {\n      name: 'Cao Yu'\n    },\n    payment: {\n      ref: 'FAD102',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(36, 'minutes').subtract(51, 'seconds'),\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    payment: {\n      ref: 'FAD101',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(38, 'minutes').subtract(55, 'seconds'),\n    customer: {\n      name: 'Anje Keizer'\n    },\n    payment: {\n      ref: 'FAD100',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(40, 'minutes').subtract(3, 'seconds'),\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    payment: {\n      ref: 'FAD99',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(45, 'minutes').subtract(32, 'seconds'),\n    customer: {\n      name: 'Adam Denisov'\n    },\n    payment: {\n      ref: 'FAD98',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(48, 'minutes').subtract(57, 'seconds'),\n    customer: {\n      name: 'Ava Gregoraci',\n      avatar: '/images/avatars/avatar_8.png'\n    },\n    payment: {\n      ref: 'FAD97',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(49, 'minutes').subtract(4, 'seconds'),\n    customer: {\n      name: 'Emilee Simchenko'\n    },\n    payment: {\n      ref: 'FAD96',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(57, 'minutes').subtract(43, 'seconds'),\n    customer: {\n      name: 'Kwak Seong-Min'\n    },\n    payment: {\n      ref: 'FAD95',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'rejected'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(59, 'minutes').subtract(6, 'seconds'),\n    customer: {\n      name: 'Shen Zhi'\n    },\n    payment: {\n      ref: 'FAD94',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'canceled'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(1, 'hour').subtract(15, 'minutes').subtract(43, 'seconds'),\n    customer: {\n      name: 'Merrile Burgett'\n    },\n    payment: {\n      ref: 'FAD93',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'canceled'\n    },\n    status: 'inactive'\n  }]\n});\nmock.onGet('/api/orders/1').reply(200, {\n  order: {\n    id: uuid(),\n    ref: 'FAD107',\n    promoCode: null,\n    value: '55.25',\n    currency: '$',\n    status: 'canceled',\n    customer: {\n      name: 'Ekaterina Tankova',\n      address: 'Street King William, 42456',\n      city: 'Montgomery',\n      country: 'United States'\n    },\n    items: [{\n      id: uuid(),\n      name: 'Project Points',\n      cuantity: 25,\n      billing: 'monthly',\n      status: 'completed',\n      value: '50.25',\n      currency: '$'\n    }, {\n      id: uuid(),\n      name: 'Freelancer Subscription',\n      cuantity: 1,\n      billing: 'monthly',\n      status: 'completed',\n      value: '5.00',\n      currency: '$'\n    }],\n    created_at: moment()\n  }\n});","map":{"version":3,"names":["uuid","moment","mock","onGet","reply","orders","id","created_at","subtract","customer","name","payment","ref","method","total","currency","status","avatar","order","promoCode","value","address","city","country","items","cuantity","billing"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/mock/orderMock.js"],"sourcesContent":["import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nimport mock from 'utils/mock';\n\nmock.onGet('/api/orders').reply(200, {\n  orders: [\n    {\n      id: uuid(),\n      created_at: moment().subtract(10, 'minutes'),\n      customer: {\n        name: 'Ekaterina Tankova'\n      },\n      payment: {\n        ref: 'FAD103',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(32, 'minutes')\n        .subtract(23, 'seconds'),\n      customer: {\n        name: 'Cao Yu'\n      },\n      payment: {\n        ref: 'FAD102',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(36, 'minutes')\n        .subtract(51, 'seconds'),\n      customer: {\n        name: 'Alexa Richardson'\n      },\n      payment: {\n        ref: 'FAD101',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(38, 'minutes')\n        .subtract(55, 'seconds'),\n      customer: {\n        name: 'Anje Keizer'\n      },\n      payment: {\n        ref: 'FAD100',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(40, 'minutes')\n        .subtract(3, 'seconds'),\n      customer: {\n        name: 'Clarke Gillebert'\n      },\n      payment: {\n        ref: 'FAD99',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(45, 'minutes')\n        .subtract(32, 'seconds'),\n      customer: {\n        name: 'Adam Denisov'\n      },\n      payment: {\n        ref: 'FAD98',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(48, 'minutes')\n        .subtract(57, 'seconds'),\n      customer: {\n        name: 'Ava Gregoraci',\n        avatar: '/images/avatars/avatar_8.png'\n      },\n      payment: {\n        ref: 'FAD97',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(49, 'minutes')\n        .subtract(4, 'seconds'),\n      customer: {\n        name: 'Emilee Simchenko'\n      },\n      payment: {\n        ref: 'FAD96',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(57, 'minutes')\n        .subtract(43, 'seconds'),\n      customer: {\n        name: 'Kwak Seong-Min'\n      },\n      payment: {\n        ref: 'FAD95',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'rejected'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(59, 'minutes')\n        .subtract(6, 'seconds'),\n      customer: {\n        name: 'Shen Zhi'\n      },\n      payment: {\n        ref: 'FAD94',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'canceled'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(1, 'hour')\n        .subtract(15, 'minutes')\n        .subtract(43, 'seconds'),\n      customer: {\n        name: 'Merrile Burgett'\n      },\n      payment: {\n        ref: 'FAD93',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'canceled'\n      },\n      status: 'inactive'\n    }\n  ]\n});\n\nmock.onGet('/api/orders/1').reply(200, {\n  order: {\n    id: uuid(),\n    ref: 'FAD107',\n    promoCode: null,\n    value: '55.25',\n    currency: '$',\n    status: 'canceled',\n    customer: {\n      name: 'Ekaterina Tankova',\n      address: 'Street King William, 42456',\n      city: 'Montgomery',\n      country: 'United States'\n    },\n    items: [\n      {\n        id: uuid(),\n        name: 'Project Points',\n        cuantity: 25,\n        billing: 'monthly',\n        status: 'completed',\n        value: '50.25',\n        currency: '$'\n      },\n      {\n        id: uuid(),\n        name: 'Freelancer Subscription',\n        cuantity: 1,\n        billing: 'monthly',\n        status: 'completed',\n        value: '5.00',\n        currency: '$'\n      }\n    ],\n    created_at: moment()\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}