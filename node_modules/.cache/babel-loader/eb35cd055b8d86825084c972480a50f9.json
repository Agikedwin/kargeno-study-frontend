{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/ProjectList/components/Filter/Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Checkbox, Chip, Divider, FormControlLabel, Input, Card, colors } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { MultiSelect } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\nconst selects = [{\n  label: 'Type',\n  options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n}, {\n  label: 'Level',\n  options: ['Novice', 'Expert']\n}, {\n  label: 'Location',\n  options: ['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']\n}, {\n  label: 'Roles',\n  options: ['Android', 'Web Developer', 'iOS']\n}];\nconst Filter = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState(['Freelance', 'Full Time', 'Novice', 'Europe', 'Android', 'Web Developer']);\n  const handleInputChange = event => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n  const handleInputKeyup = event => {\n    event.persist();\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips(chips => [...chips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n  const handleChipDelete = chip => {\n    setChips(chips => chips.filter(c => chip !== c));\n  };\n  const handleMultiSelectChange = value => {\n    setChips(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.keywords,\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        className: classes.searchIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        disableUnderline: true,\n        onChange: handleInputChange,\n        onKeyUp: handleInputKeyup,\n        placeholder: \"Enter a keyword\",\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chips,\n      children: chips.map(chip => /*#__PURE__*/_jsxDEV(Chip, {\n        className: classes.chip,\n        deleteIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this),\n        label: chip,\n        onDelete: () => handleChipDelete(chip)\n      }, chip, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.selects,\n      children: [selects.map(select => /*#__PURE__*/_jsxDEV(MultiSelect, {\n        label: select.label,\n        onChange: handleMultiSelectChange,\n        options: select.options,\n        value: chips\n      }, select.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        className: classes.inNetwork,\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          defaultChecked: true //\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this),\n        label: \"In network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"zbnimkYX2C0+CB+aMKGUQK7Ufqs=\", false, function () {\n  return [useStyles];\n});\n_c = Filter;\nFilter.propTypes = {\n  className: PropTypes.string\n};\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","PropTypes","clsx","makeStyles","Checkbox","Chip","Divider","FormControlLabel","Input","Card","colors","CloseIcon","SearchIcon","MultiSelect","useStyles","theme","root","keywords","padding","spacing","display","alignItems","searchIcon","color","palette","icon","marginRight","chips","flexWrap","chip","margin","selects","backgroundColor","grey","inNetwork","marginLeft","label","options","Filter","props","className","rest","classes","inputValue","setInputValue","setChips","handleInputChange","event","persist","target","value","handleInputKeyup","keyCode","includes","handleChipDelete","filter","c","handleMultiSelectChange","map","select","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/ProjectList/components/Filter/Filter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  Card,\n  colors\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { MultiSelect } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\n\nconst selects = [\n  {\n    label: 'Type',\n    options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nconst Filter = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = event => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips(chips => [...chips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = chip => {\n    setChips(chips => chips.filter(c => chip !== c));\n  };\n\n  const handleMultiSelectChange = value => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.keywords}>\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          disableUnderline\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </div>\n      <Divider />\n      <div className={classes.chips}>\n        {chips.map(chip => (\n          <Chip\n            className={classes.chip}\n            deleteIcon={<CloseIcon />}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </div>\n      <Divider />\n      <div className={classes.selects}>\n        {selects.map(select => (\n          <MultiSelect\n            key={select.label}\n            label={select.label}\n            onChange={handleMultiSelectChange}\n            options={select.options}\n            value={chips}\n          />\n        ))}\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={\n            <Checkbox\n              color=\"primary\"\n              defaultChecked //\n            />\n          }\n          label=\"In network\"\n        />\n      </div>\n    </Card>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}