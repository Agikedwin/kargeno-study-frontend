{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/Settings/components/General/components/SuccessSnackbar/SuccessSnackbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\nconst SuccessSnackbar = props => {\n  _s();\n  const {\n    open,\n    onClose\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: onClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      className: classes.content,\n      message: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.message,\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \"Successfully saved changes!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this),\n      variant: \"h6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SuccessSnackbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = SuccessSnackbar;\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\nexport default SuccessSnackbar;\nvar _c;\n$RefreshReg$(_c, \"SuccessSnackbar\");","map":{"version":3,"names":["React","PropTypes","makeStyles","Snackbar","SnackbarContent","colors","CheckCircleIcon","useStyles","theme","content","backgroundColor","green","message","display","alignItems","icon","marginRight","spacing","SuccessSnackbar","props","open","onClose","classes","vertical","horizontal","propTypes","func","isRequired","bool","defaultProps"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/Settings/components/General/components/SuccessSnackbar/SuccessSnackbar.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst SuccessSnackbar = props => {\n  const { open, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        }\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n};\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,QAAQ,EAAEC,eAAe,EAAEC,MAAM,QAAQ,mBAAmB;AACrE,OAAOC,eAAe,MAAM,wCAAwC;AAAC;AAErE,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;EACrCC,OAAO,EAAE;IACPC,eAAe,EAAEL,MAAM,CAACM,KAAK,CAAC,GAAG;EACnC,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACJC,WAAW,EAAER,KAAK,CAACS,OAAO,CAAC,CAAC;EAC9B;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAAA;EAC/B,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAE/B,MAAMG,OAAO,GAAGf,SAAS,EAAE;EAE3B,oBACE,QAAC,QAAQ;IACP,YAAY,EAAE;MACZgB,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAE;IACF,gBAAgB,EAAE,IAAK;IACvB,OAAO,EAAEH,OAAQ;IACjB,IAAI,EAAED,IAAK;IAAA,uBAEX,QAAC,eAAe;MACd,SAAS,EAAEE,OAAO,CAACb,OAAQ;MAC3B,OAAO,eACL;QAAM,SAAS,EAAEa,OAAO,CAACV,OAAQ;QAAA,wBAC/B,QAAC,eAAe;UAAC,SAAS,EAAEU,OAAO,CAACP;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,+BAE9C;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;MACD,OAAO,EAAC;IAAI;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACO;AAEf,CAAC;AAAC,GA3BIG,eAAe;EAAA,QAGHX,SAAS;AAAA;AAAA,KAHrBW,eAAe;AA6BrBA,eAAe,CAACO,SAAS,GAAG;EAC1BJ,OAAO,EAAEpB,SAAS,CAACyB,IAAI,CAACC,UAAU;EAClCP,IAAI,EAAEnB,SAAS,CAAC2B,IAAI,CAACD;AACvB,CAAC;AAEDT,eAAe,CAACW,YAAY,GAAG;EAC7BT,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,MAAM,CAAC;AAClB,CAAC;AAED,eAAeH,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}