{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/Login/components/LoginForm/LoginForm.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport validate from 'validate.js';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport { login } from 'actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nconst LoginForm = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n    router.history.push('/dashboards/analytics');\n  };\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ...rest,\n    className: clsx(classes.root, className),\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fields,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: hasError('email'),\n        fullWidth: true,\n        helperText: hasError('email') ? formState.errors.email[0] : null,\n        label: \"Email address\",\n        name: \"email\",\n        onChange: handleChange,\n        value: formState.values.email = 'agik',\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: hasError('password'),\n        fullWidth: true,\n        helperText: hasError('password') ? formState.errors.password[0] : null,\n        label: \"Password\",\n        name: \"password\",\n        onChange: handleChange,\n        type: \"password\",\n        value: formState.values.password = 'edwin',\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.submitButton,\n      color: \"secondary\",\n      disabled: !formState.isValid,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ze3X6HIQPzwZlM/Vp6u0SqyxjZw=\", false, function () {\n  return [useStyles, useRouter, useDispatch];\n});\n_c = LoginForm;\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","validate","clsx","PropTypes","useDispatch","makeStyles","Button","TextField","useRouter","login","schema","email","presence","allowEmpty","message","password","useStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","LoginForm","props","className","rest","classes","router","dispatch","formState","setFormState","isValid","values","touched","errors","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","history","push","hasError","field","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client-v2/src/views/Login/components/LoginForm/LoginForm.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport validate from 'validate.js';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\n\nimport useRouter from 'utils/useRouter';\nimport { login } from 'actions';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n    router.history.push('/dashboards/analytics');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <form\n      {...rest}\n      className={clsx(classes.root, className)}\n      onSubmit={handleSubmit}\n    >\n      <div className={classes.fields}>\n        <TextField\n          error={hasError('email')}\n          fullWidth\n          helperText={hasError('email') ? formState.errors.email[0] : null}\n          label=\"Email address\"\n          name=\"email\"\n          onChange={handleChange}\n          value={formState.values.email='agik'}\n          variant=\"outlined\"\n        />\n        <TextField\n          error={hasError('password')}\n          fullWidth\n          helperText={\n            hasError('password') ? formState.errors.password[0] : null\n          }\n          label=\"Password\"\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          value={formState.values.password = 'edwin'}\n          variant=\"outlined\"\n        />\n      </div>\n      <Button\n        className={classes.submitButton}\n        color=\"secondary\"\n        disabled={!formState.isValid}\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Sign in \n      </Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}