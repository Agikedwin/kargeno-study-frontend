{"ast":null,"code":"import gql from 'graphql-tag';\nconst FETCH_ACCES_LEVELS_QUERY = `\nquery  {\n  getLevels {\n     date_created\n     date_updated\n     _id\n     level_name\n     description\n     level_id\n  }\n}\n`;\nconst FETCH_DESIGNATIONS = `\n query{\n  getAllDesignations {\n    designation_name\n    level_id\n    _id\n    description\n    date_created\n    date_updated\n    designation_id\n    userlevels {\n      level_name\n      description\n      date_created\n      _id\n      level_id\n\n    }\n  }\n}\n`;\nexport const FETCH_USERS = `\nquery ($payload: String){\ngetUsers(payload: $payload) {\n  designation_name\n  description\n  date_created\n  date_updated\n  level_id\n  designation_id\n  _id\n  user {\n    _id\n    surname\n    other_names\n    patient_identifier\n    designation_id    \n    designation_id\n    dob\n    email\n    phone_number\n    gender\n    status\n\n\n  }\n  level {\n    date_created\n    date_updated\n    description\n    level_name\n    level_id\n\n  }\n}\n}\n`;\nexport const FETCH_PROGRAM = `\n{\n  getPrograams {\n    createdAt\n    programName\n    id\n  }\n}\n\n`;\nexport const CREATE_PROGRAM_ENROLL = `\nmutation postUserPogram($programId: String!, $userId: String){\n  postUserPogram(data: {\n    programId: $programId\n    userId: $userId\n  }) {\n    \n    updatedAt\n    userId\n    programId\n  }\n}\n\n`;\nexport const CREATE_VISITS = `\nmutation postVisits($visitName: String!, $visitNumber:  Int, $description: String, $windowPeriod: Int){\n  postVisits(data: {\n    visitName: $visitName\n    visitNumber: $visitNumber\n    description:  $description\n    windowPeriod: $windowPeriod\n  }) {\n    id\n    visitName\n     visitNumber\n  }\n}\n\n`;\nexport const CREATE_VISITS_SERVICES = `\n\nmutation postVisitServices($ServiceName: String!, $visitId: String, $duration: String, $description: String){\n  postVisitServices(data: {\n    ServiceName: $ServiceName\n    description: $description\n    duration: $duration\n    visitId: $visitId\n  }) {\n    ServiceName\n    duration\n  }\n}\n\n\n`;\nexport { FETCH_ACCES_LEVELS_QUERY, FETCH_DESIGNATIONS };","map":{"version":3,"names":["gql","FETCH_ACCES_LEVELS_QUERY","FETCH_DESIGNATIONS","FETCH_USERS","FETCH_PROGRAM","CREATE_PROGRAM_ENROLL","CREATE_VISITS","CREATE_VISITS_SERVICES"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/graphql/queries/app-queries.js"],"sourcesContent":["import gql from 'graphql-tag';\n\n\nconst FETCH_ACCES_LEVELS_QUERY = `\nquery  {\n  getLevels {\n     date_created\n     date_updated\n     _id\n     level_name\n     description\n     level_id\n  }\n}\n`;\n\nconst FETCH_DESIGNATIONS =`\n query{\n  getAllDesignations {\n    designation_name\n    level_id\n    _id\n    description\n    date_created\n    date_updated\n    designation_id\n    userlevels {\n      level_name\n      description\n      date_created\n      _id\n      level_id\n\n    }\n  }\n}\n`\n\nexport const FETCH_USERS =`\nquery ($payload: String){\ngetUsers(payload: $payload) {\n  designation_name\n  description\n  date_created\n  date_updated\n  level_id\n  designation_id\n  _id\n  user {\n    _id\n    surname\n    other_names\n    patient_identifier\n    designation_id    \n    designation_id\n    dob\n    email\n    phone_number\n    gender\n    status\n\n\n  }\n  level {\n    date_created\n    date_updated\n    description\n    level_name\n    level_id\n\n  }\n}\n}\n`\n\n\nexport const FETCH_PROGRAM = `\n{\n  getPrograams {\n    createdAt\n    programName\n    id\n  }\n}\n\n`\nexport const CREATE_PROGRAM_ENROLL = `\nmutation postUserPogram($programId: String!, $userId: String){\n  postUserPogram(data: {\n    programId: $programId\n    userId: $userId\n  }) {\n    \n    updatedAt\n    userId\n    programId\n  }\n}\n\n`\nexport const CREATE_VISITS = `\nmutation postVisits($visitName: String!, $visitNumber:  Int, $description: String, $windowPeriod: Int){\n  postVisits(data: {\n    visitName: $visitName\n    visitNumber: $visitNumber\n    description:  $description\n    windowPeriod: $windowPeriod\n  }) {\n    id\n    visitName\n     visitNumber\n  }\n}\n\n`\nexport const CREATE_VISITS_SERVICES = `\n\nmutation postVisitServices($ServiceName: String!, $visitId: String, $duration: String, $description: String){\n  postVisitServices(data: {\n    ServiceName: $ServiceName\n    description: $description\n    duration: $duration\n    visitId: $visitId\n  }) {\n    ServiceName\n    duration\n  }\n}\n\n\n`\n\n\nexport {FETCH_ACCES_LEVELS_QUERY, FETCH_DESIGNATIONS }"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAG7B,MAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,kBAAkB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,OAAO,MAAMC,aAAa,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,aAAa,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,sBAAsB,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,SAAQN,wBAAwB,EAAEC,kBAAkB"},"metadata":{},"sourceType":"module"}