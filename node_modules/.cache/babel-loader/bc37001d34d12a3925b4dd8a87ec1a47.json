{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/layouts/Dashboard/components/ChatBar/ChatBar.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Drawer, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, Typography, Fab, Badge } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\nimport axios from 'utils/axios';\nimport { StatusBullet } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 280\n  },\n  root: {\n    backgroundColor: theme.palette.white\n  },\n  list: {\n    padding: theme.spacing(1, 3)\n  },\n  listItemText: {\n    marginRight: theme.spacing(1)\n  },\n  lastActivity: {\n    whiteSpace: 'nowrap'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: 32,\n    right: 32,\n    zIndex: theme.zIndex.drawer - 100\n  }\n}));\nconst ChatBar = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    let mounted = true;\n    const fetchData = () => {\n      axios.get('/api/chat/activity').then(response => {\n        if (mounted) {\n          setData(response.data);\n        }\n      });\n    };\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  if (!data) {\n    return null;\n  }\n  const onlineConnections = data.connections.filter(connection => connection.active).length;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      classes: {\n        paper: classes.drawer\n      },\n      elevation: 1,\n      onClose: handleClose,\n      open: open,\n      variant: \"temporary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...rest,\n        className: clsx(classes.root, className),\n        children: data.groups.map(group => /*#__PURE__*/_jsxDEV(List, {\n          className: classes.list,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableGutters: true,\n            disableSticky: true,\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this),\n          children: data.connections.filter(connection => group.id === connection.group).map(connection => /*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Person\",\n                component: RouterLink,\n                src: connection.avatar,\n                to: \"/profile/1/timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: classes.listItemText,\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                component: RouterLink,\n                display: \"block\",\n                noWrap: true,\n                to: \"/profile/1/timeline\",\n                variant: \"h6\",\n                children: connection.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), connection.active ? /*#__PURE__*/_jsxDEV(StatusBullet, {\n              color: \"success\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.lastActivity,\n              variant: \"body2\",\n              children: moment(connection.lastActivity).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }, this)]\n          }, connection.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this))\n        }, group.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(classes.fab, {\n        [classes.shiftFab]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: onlineConnections,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          onClick: handleOpen,\n          children: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBar, \"SS8b1cxgoV64B7oiIaeGxJnE9gc=\", false, function () {\n  return [useStyles];\n});\n_c = ChatBar;\nChatBar.propTypes = {\n  className: PropTypes.string\n};\nexport default ChatBar;\nvar _c;\n$RefreshReg$(_c, \"ChatBar\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Link","RouterLink","clsx","moment","PropTypes","makeStyles","Avatar","Drawer","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","Typography","Fab","Badge","PeopleIcon","axios","StatusBullet","useStyles","theme","drawer","width","root","backgroundColor","palette","white","list","padding","spacing","listItemText","marginRight","lastActivity","whiteSpace","fab","position","bottom","right","zIndex","ChatBar","props","className","rest","classes","open","setOpen","data","setData","mounted","fetchData","get","then","response","handleOpen","handleClose","onlineConnections","connections","filter","connection","active","length","paper","groups","map","group","name","id","avatar","fromNow","shiftFab","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/layouts/Dashboard/components/ChatBar/ChatBar.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  Typography,\n  Fab,\n  Badge\n} from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\n\nimport axios from 'utils/axios';\nimport { StatusBullet } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 280\n  },\n  root: {\n    backgroundColor: theme.palette.white\n  },\n  list: {\n    padding: theme.spacing(1, 3)\n  },\n  listItemText: {\n    marginRight: theme.spacing(1)\n  },\n  lastActivity: {\n    whiteSpace: 'nowrap'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: 32,\n    right: 32,\n    zIndex: theme.zIndex.drawer - 100\n  }\n}));\n\nconst ChatBar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/chat/activity').then(response => {\n        if (mounted) {\n          setData(response.data);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  const onlineConnections = data.connections.filter(\n    connection => connection.active\n  ).length;\n\n  return (\n    <Fragment>\n      <Drawer\n        anchor=\"right\"\n        classes={{ paper: classes.drawer }}\n        elevation={1}\n        onClose={handleClose}\n        open={open}\n        variant=\"temporary\"\n      >\n        <div\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          {data.groups.map(group => (\n            <List\n              className={classes.list}\n              key={group.id}\n              subheader={\n                <ListSubheader\n                  disableGutters\n                  disableSticky\n                >\n                  {group.name}\n                </ListSubheader>\n              }\n            >\n              {data.connections\n                .filter(connection => group.id === connection.group)\n                .map(connection => (\n                  <ListItem\n                    disableGutters\n                    key={connection.id}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        alt=\"Person\"\n                        component={RouterLink}\n                        src={connection.avatar}\n                        to=\"/profile/1/timeline\"\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      className={classes.listItemText}\n                      disableTypography\n                      primary={\n                        <Typography\n                          component={RouterLink}\n                          display=\"block\"\n                          noWrap\n                          to=\"/profile/1/timeline\"\n                          variant=\"h6\"\n                        >\n                          {connection.name}\n                        </Typography>\n                      }\n                    />\n                    {connection.active ? (\n                      <StatusBullet\n                        color=\"success\"\n                        size=\"small\"\n                      />\n                    ) : (\n                      <Typography\n                        className={classes.lastActivity}\n                        variant=\"body2\"\n                      >\n                        {moment(connection.lastActivity).fromNow()}\n                      </Typography>\n                    )}\n                  </ListItem>\n                ))}\n            </List>\n          ))}\n        </div>\n      </Drawer>\n      <span\n        className={clsx(classes.fab, {\n          [classes.shiftFab]: open\n        })}\n      >\n        <Badge\n          badgeContent={onlineConnections}\n          color=\"error\"\n        >\n          <Fab\n            color=\"primary\"\n            onClick={handleOpen}\n          >\n            <PeopleIcon />\n          </Fab>\n        </Badge>\n      </span>\n    </Fragment>\n  );\n};\n\nChatBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ChatBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}