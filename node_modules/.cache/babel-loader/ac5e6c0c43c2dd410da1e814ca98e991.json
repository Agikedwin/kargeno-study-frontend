{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/components/RichEditor/RichEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Editor, EditorState, RichUtils, Modifier, getDefaultKeyBinding } from 'draft-js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Divider } from '@material-ui/core';\nimport { EditorToolbar } from './components';\nimport { blockRenderMap } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  editorContainer: {\n    padding: theme.spacing(2),\n    minHeight: 400,\n    '& .public-DraftEditorPlaceholder-root': {\n      ...theme.typography.body2\n    },\n    '& .public-DraftEditorPlaceholder-hasFocus': {\n      display: 'none'\n    },\n    '& .public-DraftEditor-content': {\n      '& p': {\n        ...theme.typography.body1\n      },\n      '& h1': {\n        ...theme.typography.h1\n      },\n      '& h2': {\n        ...theme.typography.h2\n      },\n      '& h3': {\n        ...theme.typography.h3\n      },\n      '& h4': {\n        ...theme.typography.h4\n      },\n      '& h5': {\n        ...theme.typography.h5\n      },\n      '& h6': {\n        ...theme.typography.h6\n      },\n      '& blockquote': {\n        ...theme.typography.subtitle1\n      },\n      '& ul': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& ol': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& pre': {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2\n      }\n    }\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  textAlignCenter: {\n    textAlign: 'center'\n  },\n  textAlignRight: {\n    textAlign: 'right'\n  },\n  textAlignJustify: {\n    textAlign: 'justify'\n  }\n}));\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\nconst RichEditor = props => {\n  _s();\n  const {\n    placeholder,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const editorRef = useRef(null);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const handleContainerClick = () => {\n    editorRef.current.focus();\n  };\n  const handleToolbarToggle = (type, value) => {\n    if (type === 'blockType') {\n      if (['left', 'center', 'right', 'justify'].includes(value)) {\n        const newContentState = Modifier.setBlockData(editorState.getCurrentContent(), editorState.getSelection(), {\n          'text-align': value\n        });\n        const newEditorState = EditorState.push(editorState, newContentState, 'change-block-data');\n        setEditorState(newEditorState);\n        return;\n      }\n      setEditorState(RichUtils.toggleBlockType(editorState, value));\n    } else {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, value));\n    }\n  };\n  const handleEditorChange = editorState => {\n    setEditorState(editorState);\n  };\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleEditorChange(newState);\n      return true;\n    }\n    return false;\n  };\n  const mapKeyToEditorCommand = event => {\n    if (event.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(event, editorState, 4);\n      if (newEditorState !== editorState) {\n        handleEditorChange(newEditorState);\n      }\n      return;\n    }\n    return getDefaultKeyBinding(event);\n  };\n  function blockStyleFn(contentBlock) {\n    const textAlign = contentBlock.getData().get('text-align');\n    if (textAlign) {\n      const className = `textAlign${capitalize(textAlign)}`;\n      return classes[className];\n    }\n    return '';\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n      editorState: editorState,\n      onToggle: handleToolbarToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.editorContainer,\n      onClick: handleContainerClick,\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        blockRenderMap: blockRenderMap,\n        blockStyleFn: blockStyleFn,\n        editorState: editorState,\n        handleKeyCommand: handleKeyCommand,\n        keyBindingFn: mapKeyToEditorCommand,\n        onChange: handleEditorChange,\n        placeholder: placeholder,\n        ref: editorRef,\n        spellCheck: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(RichEditor, \"b0kbrtmbh5GLIWaGvzD3S33cWQ4=\", false, function () {\n  return [useStyles];\n});\n_c = RichEditor;\nRichEditor.propTypes = {\n  className: PropTypes.string\n};\nexport default RichEditor;\nvar _c;\n$RefreshReg$(_c, \"RichEditor\");","map":{"version":3,"names":["React","useState","useRef","PropTypes","clsx","Editor","EditorState","RichUtils","Modifier","getDefaultKeyBinding","makeStyles","Paper","Divider","EditorToolbar","blockRenderMap","useStyles","theme","root","editorContainer","padding","spacing","minHeight","typography","body2","display","body1","h1","h2","h3","h4","h5","h6","subtitle1","marginLeft","backgroundColor","fontFamily","fontSize","textAlignLeft","textAlign","textAlignCenter","textAlignRight","textAlignJustify","capitalize","string","charAt","toUpperCase","slice","RichEditor","props","placeholder","className","rest","classes","editorRef","editorState","setEditorState","createEmpty","handleContainerClick","current","focus","handleToolbarToggle","type","value","includes","newContentState","setBlockData","getCurrentContent","getSelection","newEditorState","push","toggleBlockType","toggleInlineStyle","handleEditorChange","handleKeyCommand","command","newState","mapKeyToEditorCommand","event","keyCode","onTab","blockStyleFn","contentBlock","getData","get","propTypes"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/components/RichEditor/RichEditor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  Modifier,\n  getDefaultKeyBinding\n} from 'draft-js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Divider } from '@material-ui/core';\n\nimport { EditorToolbar } from './components';\nimport { blockRenderMap } from './utils';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  editorContainer: {\n    padding: theme.spacing(2),\n    minHeight: 400,\n    '& .public-DraftEditorPlaceholder-root': {\n      ...theme.typography.body2\n    },\n    '& .public-DraftEditorPlaceholder-hasFocus': {\n      display: 'none'\n    },\n    '& .public-DraftEditor-content': {\n      '& p': {\n        ...theme.typography.body1\n      },\n      '& h1': {\n        ...theme.typography.h1\n      },\n      '& h2': {\n        ...theme.typography.h2\n      },\n      '& h3': {\n        ...theme.typography.h3\n      },\n      '& h4': {\n        ...theme.typography.h4\n      },\n      '& h5': {\n        ...theme.typography.h5\n      },\n      '& h6': {\n        ...theme.typography.h6\n      },\n      '& blockquote': {\n        ...theme.typography.subtitle1\n      },\n      '& ul': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& ol': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& pre': {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2\n      }\n    }\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  textAlignCenter: {\n    textAlign: 'center'\n  },\n  textAlignRight: {\n    textAlign: 'right'\n  },\n  textAlignJustify: {\n    textAlign: 'justify'\n  }\n}));\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst RichEditor = props => {\n  const { placeholder, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const editorRef = useRef(null);\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleContainerClick = () => {\n    editorRef.current.focus();\n  };\n\n  const handleToolbarToggle = (type, value) => {\n    if (type === 'blockType') {\n      if (['left', 'center', 'right', 'justify'].includes(value)) {\n        const newContentState = Modifier.setBlockData(\n          editorState.getCurrentContent(),\n          editorState.getSelection(),\n          { 'text-align': value }\n        );\n\n        const newEditorState = EditorState.push(\n          editorState,\n          newContentState,\n          'change-block-data'\n        );\n\n        setEditorState(newEditorState);\n        return;\n      }\n\n      setEditorState(RichUtils.toggleBlockType(editorState, value));\n    } else {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, value));\n    }\n  };\n\n  const handleEditorChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      handleEditorChange(newState);\n      return true;\n    }\n\n    return false;\n  };\n\n  const mapKeyToEditorCommand = event => {\n    if (event.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(event, editorState, 4);\n\n      if (newEditorState !== editorState) {\n        handleEditorChange(newEditorState);\n      }\n\n      return;\n    }\n\n    return getDefaultKeyBinding(event);\n  };\n\n  function blockStyleFn(contentBlock) {\n    const textAlign = contentBlock.getData().get('text-align');\n\n    if (textAlign) {\n      const className = `textAlign${capitalize(textAlign)}`;\n\n      return classes[className];\n    }\n\n    return '';\n  }\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <EditorToolbar\n        editorState={editorState}\n        onToggle={handleToolbarToggle}\n      />\n      <Divider />\n      <div\n        className={classes.editorContainer}\n        onClick={handleContainerClick}\n      >\n        <Editor\n          blockRenderMap={blockRenderMap}\n          blockStyleFn={blockStyleFn}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={handleEditorChange}\n          placeholder={placeholder}\n          ref={editorRef}\n          spellCheck\n        />\n      </div>\n    </Paper>\n  );\n};\n\nRichEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RichEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SACEC,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,oBAAoB,QACf,UAAU;AACjB,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,KAAK,EAAEC,OAAO,QAAQ,mBAAmB;AAElD,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,cAAc,QAAQ,SAAS;AAAC;AAEzC,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;EACrCC,IAAI,EAAE,CAAC,CAAC;EACRC,eAAe,EAAE;IACfC,OAAO,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;IACzBC,SAAS,EAAE,GAAG;IACd,uCAAuC,EAAE;MACvC,GAAGL,KAAK,CAACM,UAAU,CAACC;IACtB,CAAC;IACD,2CAA2C,EAAE;MAC3CC,OAAO,EAAE;IACX,CAAC;IACD,+BAA+B,EAAE;MAC/B,KAAK,EAAE;QACL,GAAGR,KAAK,CAACM,UAAU,CAACG;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGT,KAAK,CAACM,UAAU,CAACI;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGV,KAAK,CAACM,UAAU,CAACK;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGX,KAAK,CAACM,UAAU,CAACM;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGZ,KAAK,CAACM,UAAU,CAACO;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGb,KAAK,CAACM,UAAU,CAACQ;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGd,KAAK,CAACM,UAAU,CAACS;MACtB,CAAC;MACD,cAAc,EAAE;QACd,GAAGf,KAAK,CAACM,UAAU,CAACU;MACtB,CAAC;MACD,MAAM,EAAE;QACN,GAAGhB,KAAK,CAACM,UAAU,CAACG,KAAK;QACzBQ,UAAU,EAAEjB,KAAK,CAACI,OAAO,CAAC,CAAC;MAC7B,CAAC;MACD,MAAM,EAAE;QACN,GAAGJ,KAAK,CAACM,UAAU,CAACG,KAAK;QACzBQ,UAAU,EAAEjB,KAAK,CAACI,OAAO,CAAC,CAAC;MAC7B,CAAC;MACD,OAAO,EAAE;QACPc,eAAe,EAAE,qBAAqB;QACtCC,UAAU,EAAE,+CAA+C;QAC3DC,QAAQ,EAAE,EAAE;QACZjB,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDkB,aAAa,EAAE;IACbC,SAAS,EAAE;EACb,CAAC;EACDC,eAAe,EAAE;IACfD,SAAS,EAAE;EACb,CAAC;EACDE,cAAc,EAAE;IACdF,SAAS,EAAE;EACb,CAAC;EACDG,gBAAgB,EAAE;IAChBH,SAAS,EAAE;EACb;AACF,CAAC,CAAC,CAAC;AAEH,MAAMI,UAAU,GAAGC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;AAE7E,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAAA;EAC1B,MAAM;IAAEC,WAAW;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGH,KAAK;EAEjD,MAAMI,OAAO,GAAGrC,SAAS,EAAE;EAE3B,MAAMsC,SAAS,GAAGnD,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAACK,WAAW,CAACkD,WAAW,EAAE,CAAC;EAEzE,MAAMC,oBAAoB,GAAG,MAAM;IACjCJ,SAAS,CAACK,OAAO,CAACC,KAAK,EAAE;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC3C,IAAID,IAAI,KAAK,WAAW,EAAE;MACxB,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAACE,QAAQ,CAACD,KAAK,CAAC,EAAE;QAC1D,MAAME,eAAe,GAAGxD,QAAQ,CAACyD,YAAY,CAC3CX,WAAW,CAACY,iBAAiB,EAAE,EAC/BZ,WAAW,CAACa,YAAY,EAAE,EAC1B;UAAE,YAAY,EAAEL;QAAM,CAAC,CACxB;QAED,MAAMM,cAAc,GAAG9D,WAAW,CAAC+D,IAAI,CACrCf,WAAW,EACXU,eAAe,EACf,mBAAmB,CACpB;QAEDT,cAAc,CAACa,cAAc,CAAC;QAC9B;MACF;MAEAb,cAAc,CAAChD,SAAS,CAAC+D,eAAe,CAAChB,WAAW,EAAEQ,KAAK,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLP,cAAc,CAAChD,SAAS,CAACgE,iBAAiB,CAACjB,WAAW,EAAEQ,KAAK,CAAC,CAAC;IACjE;EACF,CAAC;EAED,MAAMU,kBAAkB,GAAGlB,WAAW,IAAI;IACxCC,cAAc,CAACD,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMmB,gBAAgB,GAAG,CAACC,OAAO,EAAEpB,WAAW,KAAK;IACjD,MAAMqB,QAAQ,GAAGpE,SAAS,CAACkE,gBAAgB,CAACnB,WAAW,EAAEoB,OAAO,CAAC;IAEjE,IAAIC,QAAQ,EAAE;MACZH,kBAAkB,CAACG,QAAQ,CAAC;MAC5B,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;IACrC,IAAIA,KAAK,CAACC,OAAO,KAAK,CAAC,EAAE;MACvB,MAAMV,cAAc,GAAG7D,SAAS,CAACwE,KAAK,CAACF,KAAK,EAAEvB,WAAW,EAAE,CAAC,CAAC;MAE7D,IAAIc,cAAc,KAAKd,WAAW,EAAE;QAClCkB,kBAAkB,CAACJ,cAAc,CAAC;MACpC;MAEA;IACF;IAEA,OAAO3D,oBAAoB,CAACoE,KAAK,CAAC;EACpC,CAAC;EAED,SAASG,YAAY,CAACC,YAAY,EAAE;IAClC,MAAM3C,SAAS,GAAG2C,YAAY,CAACC,OAAO,EAAE,CAACC,GAAG,CAAC,YAAY,CAAC;IAE1D,IAAI7C,SAAS,EAAE;MACb,MAAMY,SAAS,GAAI,YAAWR,UAAU,CAACJ,SAAS,CAAE,EAAC;MAErD,OAAOc,OAAO,CAACF,SAAS,CAAC;IAC3B;IAEA,OAAO,EAAE;EACX;EAEA,oBACE,QAAC,KAAK;IAAA,GACAC,IAAI;IACR,SAAS,EAAE/C,IAAI,CAACgD,OAAO,CAACnC,IAAI,EAAEiC,SAAS,CAAE;IAAA,wBAEzC,QAAC,aAAa;MACZ,WAAW,EAAEI,WAAY;MACzB,QAAQ,EAAEM;IAAoB;MAAA;MAAA;MAAA;IAAA,QAC9B,eACF,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX;MACE,SAAS,EAAER,OAAO,CAAClC,eAAgB;MACnC,OAAO,EAAEuC,oBAAqB;MAAA,uBAE9B,QAAC,MAAM;QACL,cAAc,EAAE3C,cAAe;QAC/B,YAAY,EAAEkE,YAAa;QAC3B,WAAW,EAAE1B,WAAY;QACzB,gBAAgB,EAAEmB,gBAAiB;QACnC,YAAY,EAAEG,qBAAsB;QACpC,QAAQ,EAAEJ,kBAAmB;QAC7B,WAAW,EAAEvB,WAAY;QACzB,GAAG,EAAEI,SAAU;QACf,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA;IACV;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAC,GA3GIN,UAAU;EAAA,QAGEhC,SAAS;AAAA;AAAA,KAHrBgC,UAAU;AA6GhBA,UAAU,CAACqC,SAAS,GAAG;EACrBlC,SAAS,EAAE/C,SAAS,CAACwC;AACvB,CAAC;AAED,eAAeI,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}