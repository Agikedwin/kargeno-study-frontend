{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/ProjectList/components/Filter/components/MultiSelect/MultiSelect.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Checkbox, FormControlLabel, Menu, MenuItem } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\nconst MultiSelect = props => {\n  _s();\n  const {\n    label,\n    options,\n    value,\n    onChange\n  } = props;\n  const classes = useStyles();\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n  const handleOptionToggle = event => {\n    let newValue = [...value];\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter(item => item !== event.target.value);\n    }\n    onChange && onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleMenuOpen,\n      ref: anchorRef,\n      children: [label, /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorRef.current,\n      className: classes.menu,\n      onClose: handleMenuClose,\n      open: openMenu\n      // eslint-disable-next-line react/jsx-sort-props\n      ,\n      PaperProps: {\n        style: {\n          width: 250\n        }\n      },\n      children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuItem,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          className: classes.formControlLabel,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: value.indexOf(option) > -1,\n            color: \"primary\",\n            onClick: handleOptionToggle,\n            value: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this),\n          label: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiSelect, \"iygJF9UufvKSiK2ysKNjvfhdhYc=\", false, function () {\n  return [useStyles];\n});\n_c = MultiSelect;\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\nexport default MultiSelect;\nvar _c;\n$RefreshReg$(_c, \"MultiSelect\");","map":{"version":3,"names":["React","Fragment","useState","useRef","PropTypes","makeStyles","Button","Checkbox","FormControlLabel","Menu","MenuItem","ArrowDropDownIcon","useStyles","theme","root","menuItem","padding","formControlLabel","spacing","width","margin","MultiSelect","props","label","options","value","onChange","classes","anchorRef","openMenu","setOpenMenu","handleMenuOpen","handleMenuClose","handleOptionToggle","event","newValue","target","checked","push","filter","item","current","menu","style","map","option","indexOf","propTypes","string","isRequired","func","array"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/ProjectList/components/Filter/components/MultiSelect/MultiSelect.js"],"sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\n\nconst MultiSelect = props => {\n  const { label, options, value, onChange } = props;\n\n  const classes = useStyles();\n\n  const anchorRef = useRef(null);\n\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleOptionToggle = event => {\n    let newValue = [...value];\n\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter(item => item !== event.target.value);\n    }\n\n    onChange && onChange(newValue);\n  };\n\n  return (\n    <Fragment>\n      <Button\n        onClick={handleMenuOpen}\n        ref={anchorRef}\n      >\n        {label}\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        className={classes.menu}\n        onClose={handleMenuClose}\n        open={openMenu}\n        // eslint-disable-next-line react/jsx-sort-props\n        PaperProps={{ style: { width: 250 } }}\n      >\n        {options.map(option => (\n          <MenuItem\n            className={classes.menuItem}\n            key={option}\n          >\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={\n                <Checkbox\n                  checked={value.indexOf(option) > -1}\n                  color=\"primary\"\n                  onClick={handleOptionToggle}\n                  value={option}\n                />\n              }\n              label={option}\n            />\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\n\nexport default MultiSelect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}