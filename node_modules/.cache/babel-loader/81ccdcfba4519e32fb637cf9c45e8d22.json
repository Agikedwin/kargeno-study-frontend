{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/Overview/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport axios from 'utils/axios';\nimport { ProjectCard } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(2)\n  },\n  title: {\n    position: 'relative',\n    '&:before': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  arrowIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst Projects = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchProjects = () => {\n      axios.get('/api/account/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n    fetchProjects();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h5\",\n        children: \"Active Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: RouterLink,\n        to: \"/profile/user/projects\",\n        children: [\"See all\", /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {\n          className: classes.arrowIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: project\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"SLTPTDG2OM/zl0k1BtXCOzlDuu4=\", false, function () {\n  return [useStyles];\n});\n_c = Projects;\nProjects.propTypes = {\n  className: PropTypes.string\n};\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Link","RouterLink","PropTypes","clsx","makeStyles","Typography","Button","KeyboardArrowRightIcon","axios","ProjectCard","useStyles","theme","root","header","display","alignItems","justifyContent","marginBottom","spacing","title","position","bottom","left","content","height","width","backgroundColor","palette","primary","main","arrowIcon","marginLeft","Projects","props","className","rest","classes","projects","setProjects","mounted","fetchProjects","get","then","response","data","map","project","id","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/Overview/components/Projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nimport axios from 'utils/axios';\nimport { ProjectCard } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(2)\n  },\n  title: {\n    position: 'relative',\n    '&:before': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  arrowIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Projects = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/account/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.header}>\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n        >\n          Active Projects\n        </Typography>\n        <Button\n          component={RouterLink}\n          to=\"/profile/user/projects\"\n        >\n          See all\n          <KeyboardArrowRightIcon className={classes.arrowIcon} />\n        </Button>\n      </div>\n      {projects.map(project => (\n        <ProjectCard\n          key={project.id}\n          project={project}\n        />\n      ))}\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}