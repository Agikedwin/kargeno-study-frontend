{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/KanbanBoard/KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { Header, TaskList, TaskListItem, TaskDetails } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0, 3, 3, 1),\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap'\n  }\n}));\nconst KanbanBoard = () => {\n  _s();\n  const classes = useStyles();\n  const [lists, setLists] = useState([]);\n  const [openedTask, setOpenedTask] = useState(null);\n  useEffect(() => {\n    let mounted = true;\n    const fetchData = () => {\n      axios.get('/api/kanban').then(response => {\n        if (mounted) {\n          const lists = [];\n          for (const list of response.data.lists) {\n            lists.push({\n              ...list,\n              items: []\n            });\n          }\n          for (const task of response.data.tasks) {\n            lists.forEach(list => {\n              if (list.id === task.list) {\n                list.items.push(task);\n              }\n            });\n          }\n          setLists(lists);\n        }\n      });\n    };\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const handleDragEnd = event => {\n    const {\n      source,\n      destination\n    } = event;\n    if (!destination) {\n      return;\n    }\n    const newLists = _.clone(lists);\n    const sourceList = newLists.find(list => list.id === source.droppableId);\n    const destinationList = newLists.find(list => list.id === destination.droppableId);\n    const [removedItem] = sourceList.items.splice(source.index, 1);\n    if (source.droppableId === destination.droppableId) {\n      sourceList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    } else {\n      removedItem.list = destination.droppableId;\n      destinationList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    }\n  };\n  const handleListAdd = () => {\n    const list = {\n      id: uuid(),\n      title: 'New list',\n      items: []\n    };\n    setLists(lists => [...lists, list]);\n  };\n  const handleTaskOpen = task => {\n    setOpenedTask(task);\n  };\n  const handleTaskClose = () => {\n    setOpenedTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: classes.root,\n    title: \"Kanban Board\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onListAdd: handleListAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: lists.map(list => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: list.id,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskList, {\n            provided: provided,\n            snapshot: snapshot,\n            title: list.title,\n            total: list.items.length,\n            children: [list.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskListItem, {\n                onOpen: () => handleTaskOpen(task),\n                provided: provided,\n                snapshot: snapshot,\n                task: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskDetails, {\n      onClose: handleTaskClose,\n      open: Boolean(openedTask),\n      task: openedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"kqEZKFV45/MbIZNnTo5UXc3X2es=\", false, function () {\n  return [useStyles];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","_","uuid","makeStyles","axios","Page","Header","TaskList","TaskListItem","TaskDetails","useStyles","theme","root","height","display","flexDirection","content","flexGrow","padding","spacing","overflowX","overflowY","whiteSpace","KanbanBoard","classes","lists","setLists","openedTask","setOpenedTask","mounted","fetchData","get","then","response","list","data","push","items","task","tasks","forEach","id","handleDragEnd","event","source","destination","newLists","clone","sourceList","find","droppableId","destinationList","removedItem","splice","index","handleListAdd","title","handleTaskOpen","handleTaskClose","map","provided","snapshot","length","placeholder","Boolean"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/KanbanBoard/KanbanBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { Header, TaskList, TaskListItem, TaskDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0, 3, 3, 1),\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst KanbanBoard = () => {\n  const classes = useStyles();\n  const [lists, setLists] = useState([]);\n  const [openedTask, setOpenedTask] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/kanban').then(response => {\n        if (mounted) {\n          const lists = [];\n\n          for (const list of response.data.lists) {\n            lists.push({ ...list, items: [] });\n          }\n\n          for (const task of response.data.tasks) {\n            lists.forEach(list => {\n              if (list.id === task.list) {\n                list.items.push(task);\n              }\n            });\n          }\n\n          setLists(lists);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDragEnd = event => {\n    const { source, destination } = event;\n\n    if (!destination) {\n      return;\n    }\n\n    const newLists = _.clone(lists);\n    const sourceList = newLists.find(list => list.id === source.droppableId);\n    const destinationList = newLists.find(\n      list => list.id === destination.droppableId\n    );\n    const [removedItem] = sourceList.items.splice(source.index, 1);\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    } else {\n      removedItem.list = destination.droppableId;\n      destinationList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    }\n  };\n\n  const handleListAdd = () => {\n    const list = {\n      id: uuid(),\n      title: 'New list',\n      items: []\n    };\n\n    setLists(lists => [...lists, list]);\n  };\n\n  const handleTaskOpen = task => {\n    setOpenedTask(task);\n  };\n\n  const handleTaskClose = () => {\n    setOpenedTask(null);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Header onListAdd={handleListAdd} />\n      <div className={classes.content}>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {lists.map(list => (\n            <Droppable\n              droppableId={list.id}\n              key={list.id}\n            >\n              {(provided, snapshot) => (\n                <TaskList\n                  provided={provided}\n                  snapshot={snapshot}\n                  title={list.title}\n                  total={list.items.length}\n                >\n                  {list.items.map((task, index) => (\n                    <Draggable\n                      draggableId={task.id}\n                      index={index}\n                      key={task.id}\n                    >\n                      {(provided, snapshot) => (\n                        <TaskListItem\n                          onOpen={() => handleTaskOpen(task)}\n                          provided={provided}\n                          snapshot={snapshot}\n                          task={task}\n                        />\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n      <TaskDetails\n        onClose={handleTaskClose}\n        open={Boolean(openedTask)}\n        task={openedTask}\n      />\n    </Page>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,QAAQ,cAAc;AAAC;AAE3E,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;EACrCC,IAAI,EAAE;IACJC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAEP,KAAK,CAACQ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClCC,SAAS,EAAE,MAAM;IACjBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,OAAO,GAAGd,SAAS,EAAE;EAC3B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIgC,OAAO,GAAG,IAAI;IAElB,MAAMC,SAAS,GAAG,MAAM;MACtB1B,KAAK,CAAC2B,GAAG,CAAC,aAAa,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QACxC,IAAIJ,OAAO,EAAE;UACX,MAAMJ,KAAK,GAAG,EAAE;UAEhB,KAAK,MAAMS,IAAI,IAAID,QAAQ,CAACE,IAAI,CAACV,KAAK,EAAE;YACtCA,KAAK,CAACW,IAAI,CAAC;cAAE,GAAGF,IAAI;cAAEG,KAAK,EAAE;YAAG,CAAC,CAAC;UACpC;UAEA,KAAK,MAAMC,IAAI,IAAIL,QAAQ,CAACE,IAAI,CAACI,KAAK,EAAE;YACtCd,KAAK,CAACe,OAAO,CAACN,IAAI,IAAI;cACpB,IAAIA,IAAI,CAACO,EAAE,KAAKH,IAAI,CAACJ,IAAI,EAAE;gBACzBA,IAAI,CAACG,KAAK,CAACD,IAAI,CAACE,IAAI,CAAC;cACvB;YACF,CAAC,CAAC;UACJ;UAEAZ,QAAQ,CAACD,KAAK,CAAC;QACjB;MACF,CAAC,CAAC;IACJ,CAAC;IAEDK,SAAS,EAAE;IAEX,OAAO,MAAM;MACXD,OAAO,GAAG,KAAK;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,aAAa,GAAGC,KAAK,IAAI;IAC7B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,KAAK;IAErC,IAAI,CAACE,WAAW,EAAE;MAChB;IACF;IAEA,MAAMC,QAAQ,GAAG7C,CAAC,CAAC8C,KAAK,CAACtB,KAAK,CAAC;IAC/B,MAAMuB,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACf,IAAI,IAAIA,IAAI,CAACO,EAAE,KAAKG,MAAM,CAACM,WAAW,CAAC;IACxE,MAAMC,eAAe,GAAGL,QAAQ,CAACG,IAAI,CACnCf,IAAI,IAAIA,IAAI,CAACO,EAAE,KAAKI,WAAW,CAACK,WAAW,CAC5C;IACD,MAAM,CAACE,WAAW,CAAC,GAAGJ,UAAU,CAACX,KAAK,CAACgB,MAAM,CAACT,MAAM,CAACU,KAAK,EAAE,CAAC,CAAC;IAE9D,IAAIV,MAAM,CAACM,WAAW,KAAKL,WAAW,CAACK,WAAW,EAAE;MAClDF,UAAU,CAACX,KAAK,CAACgB,MAAM,CAACR,WAAW,CAACS,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;MAC1D1B,QAAQ,CAACoB,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLM,WAAW,CAAClB,IAAI,GAAGW,WAAW,CAACK,WAAW;MAC1CC,eAAe,CAACd,KAAK,CAACgB,MAAM,CAACR,WAAW,CAACS,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;MAC/D1B,QAAQ,CAACoB,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMS,aAAa,GAAG,MAAM;IAC1B,MAAMrB,IAAI,GAAG;MACXO,EAAE,EAAEvC,IAAI,EAAE;MACVsD,KAAK,EAAE,UAAU;MACjBnB,KAAK,EAAE;IACT,CAAC;IAEDX,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAES,IAAI,CAAC,CAAC;EACrC,CAAC;EAED,MAAMuB,cAAc,GAAGnB,IAAI,IAAI;IAC7BV,aAAa,CAACU,IAAI,CAAC;EACrB,CAAC;EAED,MAAMoB,eAAe,GAAG,MAAM;IAC5B9B,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,IAAI;IACH,SAAS,EAAEJ,OAAO,CAACZ,IAAK;IACxB,KAAK,EAAC,cAAc;IAAA,wBAEpB,QAAC,MAAM;MAAC,SAAS,EAAE2C;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAK,SAAS,EAAE/B,OAAO,CAACR,OAAQ;MAAA,uBAC9B,QAAC,eAAe;QAAC,SAAS,EAAE0B,aAAc;QAAA,UACvCjB,KAAK,CAACkC,GAAG,CAACzB,IAAI,iBACb,QAAC,SAAS;UACR,WAAW,EAAEA,IAAI,CAACO,EAAG;UAAA,UAGpB,CAACmB,QAAQ,EAAEC,QAAQ,kBAClB,QAAC,QAAQ;YACP,QAAQ,EAAED,QAAS;YACnB,QAAQ,EAAEC,QAAS;YACnB,KAAK,EAAE3B,IAAI,CAACsB,KAAM;YAClB,KAAK,EAAEtB,IAAI,CAACG,KAAK,CAACyB,MAAO;YAAA,WAExB5B,IAAI,CAACG,KAAK,CAACsB,GAAG,CAAC,CAACrB,IAAI,EAAEgB,KAAK,kBAC1B,QAAC,SAAS;cACR,WAAW,EAAEhB,IAAI,CAACG,EAAG;cACrB,KAAK,EAAEa,KAAM;cAAA,UAGZ,CAACM,QAAQ,EAAEC,QAAQ,kBAClB,QAAC,YAAY;gBACX,MAAM,EAAE,MAAMJ,cAAc,CAACnB,IAAI,CAAE;gBACnC,QAAQ,EAAEsB,QAAS;gBACnB,QAAQ,EAAEC,QAAS;gBACnB,IAAI,EAAEvB;cAAK;gBAAA;gBAAA;gBAAA;cAAA;YAEd,GATIA,IAAI,CAACG,EAAE;cAAA;cAAA;cAAA;YAAA,QAWf,CAAC,EACDmB,QAAQ,CAACG,WAAW;UAAA;YAAA;YAAA;YAAA;UAAA;QAExB,GA3BI7B,IAAI,CAACO,EAAE;UAAA;UAAA;UAAA;QAAA,QA6Bf;MAAC;QAAA;QAAA;QAAA;MAAA;IACc;MAAA;MAAA;MAAA;IAAA,QACd,eACN,QAAC,WAAW;MACV,OAAO,EAAEiB,eAAgB;MACzB,IAAI,EAAEM,OAAO,CAACrC,UAAU,CAAE;MAC1B,IAAI,EAAEA;IAAW;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAC,GAjIIJ,WAAW;EAAA,QACCb,SAAS;AAAA;AAAA,KADrBa,WAAW;AAmIjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}