{"ast":null,"code":"import { accessLevelActions } from './api-slice';\nimport { CREATE_ACCESS_LEVEL } from '../graphql/mutations/app-mutations';\nimport { async } from 'validate.js';\n\n//import { useMutation } from '@apollo/client';\n\nexport const api = async (query, params) => {\n  let savedData = [];\n  console.log('DATA () params ', params);\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: query,\n        variables: {\n          payload: params\n        }\n      })\n    }).then(r => {\n      return r.json();\n    }).then(levels => {\n      savedData = levels;\n      console.log('FETCH AT ACTIONS ()', savedData);\n      // return (dispatch) => {\n      //   dispatch(accessLevelActions.fetchAccessLevels([...savedData]));\n\n      // };\n    }).catch(error => {\n      throw Error(error);\n    });\n  } catch (error) {\n    throw Error(error);\n  }\n  return savedData;\n\n  /* return async (dispach) =>{\n    await dispach(accessLevelActions.fetchAccessLevels(payload));\n  } */\n};\n\nexport const saveAccessLevel = async (payload, mutation) => {\n  console.log('payload ====== ', payload);\n  console.log('mutation ====== ', mutation);\n  let savedData = [];\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: mutation,\n        // 2 dimensions array with all the elements at index 0, then loop the rest using i\n        variables: payload\n      })\n    }).then(r => {\n      return r.json();\n    }).then(data => {\n      savedData = data;\n      // return (dispatch) => {\n      //   dispatch(accessLevelActions.fetchAccessLevels([...savedData]));\n\n      // };\n    }).catch(error => {\n      throw Error(error);\n    });\n  } catch (error) {\n    throw Error(error);\n  }\n  return savedData;\n\n  /*   console.log('save access level', payload);\n  \n  \n    //return  async (dispatch) => {\n    console.log('save access level 33');\n      \n      \n    const sendRequest = async (req) => {\n  \n      try {\n        const [save, { data, loading, error }] = useMutation(CREATE_ACCESS_LEVEL);\n        console.log('save access level 4');\n        save(req);\n        \n        \n        dispatch(accessLevelActions.createAccessLevel(payload))\n        //dispatch(accessLevelActions.showMessages('DATA IS SUCCESSFUL'));\n      } catch (error) {\n        console.log('error',error);\n        //dispatch(organizationActions.createOrganization(error))\n        //dispatch(organizationActions.showMessages('DATA IS NOT SUCCESSFUL'));\n        \n      }\n      \n    };\n  \n    sendRequest(payload); */\n\n  //};\n};\n\nconst sendToGraphQL = async payload => {\n  let savedData = [];\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: CREATE_ACCESS_LEVEL,\n        // 2 dimensions array with all the elements at index 0, then loop the rest using i\n        variables: payload\n      })\n    }).then(r => {\n      return r.json();\n    }).then(data => {\n      savedData = data;\n      console.log('Successfully posted 2:', savedData);\n      return data;\n    }).catch(error => {\n      console.log(error);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  return savedData;\n};\nexport const showMessages = data => {\n  return async dispach => {\n    await dispach(accessLevelActions.fetchAccessLevels(data));\n  };\n};","map":{"version":3,"names":["accessLevelActions","CREATE_ACCESS_LEVEL","async","api","query","params","savedData","console","log","fetch","method","headers","body","JSON","stringify","variables","payload","then","r","json","levels","catch","error","Error","saveAccessLevel","mutation","data","sendToGraphQL","showMessages","dispach","fetchAccessLevels"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/store/api-actions.js"],"sourcesContent":["import { accessLevelActions } from './api-slice';\n\nimport { CREATE_ACCESS_LEVEL } from '../graphql/mutations/app-mutations';\nimport { async } from 'validate.js';\n\n//import { useMutation } from '@apollo/client';\n\n\n\n\n\nexport const api = async(query, params) =>{\n\n\n\n\n  let savedData = [];\n  console.log('DATA () params ',params )\n\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: query,\n        variables: {payload: params}\n      })\n    }).then(r => {\n      \n      return  r.json()\n    })\n      .then(levels => {\n        savedData = levels;\n        console.log('FETCH AT ACTIONS ()',savedData)\n        // return (dispatch) => {\n        //   dispatch(accessLevelActions.fetchAccessLevels([...savedData]));\n\n        // };\n        \n      })\n      .catch(error => {\n        throw Error(error)\n      });\n\n  } catch (error) {\n    throw Error(error)\n  }\n\n  return savedData;\n\n  /* return async (dispach) =>{\n    await dispach(accessLevelActions.fetchAccessLevels(payload));\n  } */\n\n}\n\n\n\nexport const saveAccessLevel = async (payload, mutation) => {\n\n  console.log('payload ====== ',payload);\n  console.log('mutation ====== ',mutation);\n\n \n\n  let savedData = [];\n\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: mutation,\n        // 2 dimensions array with all the elements at index 0, then loop the rest using i\n        variables:payload,\n\n      })\n    }).then(r => {\n      \n      return  r.json()\n    })\n      .then(data => {\n        savedData = data;\n        // return (dispatch) => {\n        //   dispatch(accessLevelActions.fetchAccessLevels([...savedData]));\n\n        // };\n        \n      })\n      .catch(error => {\n        throw Error(error)\n      });\n\n  } catch (error) {\n    throw Error(error)\n  }\n\n  return savedData;\n  \n/*   console.log('save access level', payload);\n\n\n  //return  async (dispatch) => {\n  console.log('save access level 33');\n    \n    \n  const sendRequest = async (req) => {\n\n    try {\n      const [save, { data, loading, error }] = useMutation(CREATE_ACCESS_LEVEL);\n      console.log('save access level 4');\n      save(req);\n      \n      \n      dispatch(accessLevelActions.createAccessLevel(payload))\n      //dispatch(accessLevelActions.showMessages('DATA IS SUCCESSFUL'));\n    } catch (error) {\n      console.log('error',error);\n      //dispatch(organizationActions.createOrganization(error))\n      //dispatch(organizationActions.showMessages('DATA IS NOT SUCCESSFUL'));\n      \n    }\n    \n  };\n\n  sendRequest(payload); */\n    \n  \n  //};\n  \n \n}\n\n\nconst sendToGraphQL = async (payload) => {\n\n \n\n\nlet savedData = [];\n\n  try {\n    await fetch('http://localhost:3005/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: CREATE_ACCESS_LEVEL,\n        // 2 dimensions array with all the elements at index 0, then loop the rest using i\n        variables:payload,\n\n      })\n    }).then(r => {\n      \n      return  r.json()\n    })\n      .then(data => {\n          \n        savedData = data;\n        console.log('Successfully posted 2:',savedData)\n        return data\n        \n      })\n      .catch(error => {\n        console.log(error)\n      });\n\n  } catch (error) {\n    console.log(error)\n  }\n\n  return savedData;\n  \n  \n\n}\n\nexport const showMessages =  (data) => {\n  return async (dispach) =>{\n    await dispach(accessLevelActions.fetchAccessLevels(data));\n  }\n\n}\n "],"mappings":"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"},"metadata":{},"sourceType":"module"}