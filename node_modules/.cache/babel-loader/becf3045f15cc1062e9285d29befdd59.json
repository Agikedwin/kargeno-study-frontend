{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    username: 's',\n    email: 'd',\n    password: 'g',\n    confirmPassword: 'r'\n  },\n  reducers: {\n    createUsers(initialState, action) {\n      // eslint-disable-next-line no-console\n      console.log(initialState, 'THE ACTIONS AT REDUX ', action);\n      initialState.name = action.payload.name;\n      initialState.email = action.payload.email;\n      initialState.password = action.payload.password;\n      initialState.confirmPassword = action.confirmPassword;\n    },\n    fetchUsers(state, action) {\n      state.data = action.payload;\n    },\n    updateUsers(state, action) {\n      state.name = action.payload.name;\n      state.email = action.payload.email;\n      state.password = action.payload.password;\n      state.confirmPassword = action.confirmPassword;\n    }\n  }\n});\nexport const userActions = userSlice.actions;\nexport default userSlice;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","username","email","password","confirmPassword","reducers","createUsers","action","console","log","payload","fetchUsers","state","data","updateUsers","userActions","actions"],"sources":["/home/agik/agik/projects/Studies/kargeno-client-v2/src/store/user-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    username:'s', \n    email:'d', \n    password:'g', \n    confirmPassword:'r' \n  },\n  reducers: {\n    createUsers(initialState,action){\n      // eslint-disable-next-line no-console\n      console.log(initialState,'THE ACTIONS AT REDUX ',action);\n      initialState.name = action.payload.name;\n      initialState.email = action.payload.email;\n      initialState.password = action.payload.password;\n      initialState.confirmPassword = action.confirmPassword;\n    },\n    fetchUsers(state,action){\n      state.data = action.payload\n    },\n    updateUsers(state,action){\n      state.name = action.payload.name;\n      state.email = action.payload.email;\n      state.password = action.payload.password;\n      state.confirmPassword = action.confirmPassword;\n    }\n  },\n})\n\nexport const userActions = userSlice.actions;\nexport default userSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAC,GAAG;IACZC,KAAK,EAAC,GAAG;IACTC,QAAQ,EAAC,GAAG;IACZC,eAAe,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,CAACN,YAAY,EAACO,MAAM,EAAC;MAC9B;MACAC,OAAO,CAACC,GAAG,CAACT,YAAY,EAAC,uBAAuB,EAACO,MAAM,CAAC;MACxDP,YAAY,CAACD,IAAI,GAAGQ,MAAM,CAACG,OAAO,CAACX,IAAI;MACvCC,YAAY,CAACE,KAAK,GAAGK,MAAM,CAACG,OAAO,CAACR,KAAK;MACzCF,YAAY,CAACG,QAAQ,GAAGI,MAAM,CAACG,OAAO,CAACP,QAAQ;MAC/CH,YAAY,CAACI,eAAe,GAAGG,MAAM,CAACH,eAAe;IACvD,CAAC;IACDO,UAAU,CAACC,KAAK,EAACL,MAAM,EAAC;MACtBK,KAAK,CAACC,IAAI,GAAGN,MAAM,CAACG,OAAO;IAC7B,CAAC;IACDI,WAAW,CAACF,KAAK,EAACL,MAAM,EAAC;MACvBK,KAAK,CAACb,IAAI,GAAGQ,MAAM,CAACG,OAAO,CAACX,IAAI;MAChCa,KAAK,CAACV,KAAK,GAAGK,MAAM,CAACG,OAAO,CAACR,KAAK;MAClCU,KAAK,CAACT,QAAQ,GAAGI,MAAM,CAACG,OAAO,CAACP,QAAQ;MACxCS,KAAK,CAACR,eAAe,GAAGG,MAAM,CAACH,eAAe;IAChD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,WAAW,GAAGjB,SAAS,CAACkB,OAAO;AAC5C,eAAelB,SAAS"},"metadata":{},"sourceType":"module"}