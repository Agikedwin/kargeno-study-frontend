{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/DashboardDefault/components/TeamTasks/TeamTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, List, Button, Divider } from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport axios from 'utils/axios';\nimport { GenericMoreButton } from 'components';\nimport { TaskItem } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 400\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  arrowForwardIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst TeamTasks = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    const fetchTasks = () => {\n      axios.get('/api/tasks').then(response => {\n        if (mounted) {\n          setTasks(response.data.tasks);\n        }\n      });\n    };\n    fetchTasks();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(GenericMoreButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this),\n      title: \"Team Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.inner,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: tasks.map((task, i) => /*#__PURE__*/_jsxDEV(TaskItem, {\n              divider: i < tasks.length - 1,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        component: RouterLink,\n        size: \"small\",\n        to: \"/kanban-board\",\n        variant: \"text\",\n        children: [\"See all\", /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n          className: classes.arrowForwardIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamTasks, \"TbdkP2vHUBP4SQrhPaScRz/Vnxo=\", false, function () {\n  return [useStyles];\n});\n_c = TeamTasks;\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\nexport default TeamTasks;\nvar _c;\n$RefreshReg$(_c, \"TeamTasks\");","map":{"version":3,"names":["React","useState","useEffect","Link","RouterLink","clsx","PropTypes","PerfectScrollbar","makeStyles","Card","CardActions","CardHeader","CardContent","List","Button","Divider","ArrowForwardIcon","axios","GenericMoreButton","TaskItem","useStyles","theme","root","content","padding","inner","minWidth","actions","justifyContent","arrowForwardIcon","marginLeft","spacing","TeamTasks","props","className","rest","classes","tasks","setTasks","mounted","fetchTasks","get","then","response","data","map","task","i","length","id","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/DashboardDefault/components/TeamTasks/TeamTasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  List,\n  Button,\n  Divider\n} from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nimport axios from 'utils/axios';\nimport { GenericMoreButton } from 'components';\nimport { TaskItem } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 400\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  arrowForwardIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst TeamTasks = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTasks = () => {\n      axios.get('/api/tasks').then(response => {\n        if (mounted) {\n          setTasks(response.data.tasks);\n        }\n      });\n    };\n\n    fetchTasks();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <List>\n              {tasks.map((task, i) => (\n                <TaskItem\n                  divider={i < tasks.length - 1}\n                  key={task.id}\n                  task={task}\n                />\n              ))}\n            </List>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          size=\"small\"\n          to=\"/kanban-board\"\n          variant=\"text\"\n        >\n          See all\n          <ArrowForwardIcon className={classes.arrowForwardIcon} />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,IAAI,EACJC,MAAM,EACNC,OAAO,QACF,mBAAmB;AAC1B,OAAOC,gBAAgB,MAAM,iCAAiC;AAE9D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,SAASC,QAAQ,QAAQ,cAAc;AAAC;AAExC,MAAMC,SAAS,GAAGZ,UAAU,CAACa,KAAK,KAAK;EACrCC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE;IACPC,OAAO,EAAE;EACX,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,EAAE;EAClB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,UAAU,EAAET,KAAK,CAACU,OAAO,CAAC,CAAC;EAC7B;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;EACzB,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGF,KAAK;EACpC,MAAMG,OAAO,GAAGhB,SAAS,EAAE;EAC3B,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIqC,OAAO,GAAG,IAAI;IAElB,MAAMC,UAAU,GAAG,MAAM;MACvBvB,KAAK,CAACwB,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QACvC,IAAIJ,OAAO,EAAE;UACXD,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAACP,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDG,UAAU,EAAE;IAEZ,OAAO,MAAM;MACXD,OAAO,GAAG,KAAK;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,IAAI;IAAA,GACCJ,IAAI;IACR,SAAS,EAAE9B,IAAI,CAAC+B,OAAO,CAACd,IAAI,EAAEY,SAAS,CAAE;IAAA,wBAEzC,QAAC,UAAU;MACT,MAAM,eAAE,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA,QAAI;MAC9B,KAAK,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAClB,eACF,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX,QAAC,WAAW;MAAC,SAAS,EAAEE,OAAO,CAACb,OAAQ;MAAA,uBACtC,QAAC,gBAAgB;QAAA,uBACf;UAAK,SAAS,EAAEa,OAAO,CAACX,KAAM;UAAA,uBAC5B,QAAC,IAAI;YAAA,UACFY,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACjB,QAAC,QAAQ;cACP,OAAO,EAAEA,CAAC,GAAGV,KAAK,CAACW,MAAM,GAAG,CAAE;cAE9B,IAAI,EAAEF;YAAK,GADNA,IAAI,CAACG,EAAE;cAAA;cAAA;cAAA;YAAA,QAGf;UAAC;YAAA;YAAA;YAAA;UAAA;QACG;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA;IACW;MAAA;MAAA;MAAA;IAAA,QACP,eACd,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX,QAAC,WAAW;MAAC,SAAS,EAAEb,OAAO,CAACT,OAAQ;MAAA,uBACtC,QAAC,MAAM;QACL,KAAK,EAAC,SAAS;QACf,SAAS,EAAEvB,UAAW;QACtB,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,eAAe;QAClB,OAAO,EAAC,MAAM;QAAA,WACf,SAEC,uBAAC,gBAAgB;UAAC,SAAS,EAAEgC,OAAO,CAACP;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAClD;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEX,CAAC;AAAC,GA/DIG,SAAS;EAAA,QAEGZ,SAAS;AAAA;AAAA,KAFrBY,SAAS;AAiEfA,SAAS,CAACkB,SAAS,GAAG;EACpBhB,SAAS,EAAE5B,SAAS,CAAC6C;AACvB,CAAC;AAED,eAAenB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}