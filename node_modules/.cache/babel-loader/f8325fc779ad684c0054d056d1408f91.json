{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/Mail/components/EmailList/EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, List } from '@material-ui/core';\nimport { EmailToolbar, EmailItem } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.white,\n    overflow: 'hidden'\n  }\n}));\nconst EmailList = props => {\n  _s();\n  const {\n    emails,\n    onEmailOpen,\n    onBack,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  const handleSelectAll = () => {\n    setSelectedEmails(emails.map(email => email.id));\n  };\n  const handleDeselectAll = () => {\n    setSelectedEmails([]);\n  };\n  const handleToggleOne = id => {\n    setSelectedEmails(selectedEmails => {\n      let newSelectedEmails = [...selectedEmails];\n      if (newSelectedEmails.includes(id)) {\n        return newSelectedEmails.filter(email => email !== id);\n      } else {\n        newSelectedEmails.push(id);\n        return newSelectedEmails;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    className: clsx(classes.root, className),\n    children: [/*#__PURE__*/_jsxDEV(EmailToolbar, {\n      onBack: onBack,\n      onDeselectAll: handleDeselectAll,\n      onSelectAll: handleSelectAll,\n      selectedEmails: selectedEmails,\n      totalEmails: emails.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: emails.map(email => /*#__PURE__*/_jsxDEV(EmailItem, {\n        email: email,\n        onOpen: onEmailOpen,\n        onToggle: () => handleToggleOne(email.id),\n        selected: selectedEmails.includes(email.id)\n      }, email.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailList, \"AQPte+GGY9b1b8egaE6+XzpwNYw=\", false, function () {\n  return [useStyles];\n});\n_c = EmailList;\nEmailList.propTypes = {\n  className: PropTypes.string,\n  emails: PropTypes.array.isRequired,\n  onBack: PropTypes.func,\n  onOpen: PropTypes.func\n};\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useState","PropTypes","clsx","makeStyles","Divider","List","EmailToolbar","EmailItem","useStyles","theme","root","height","backgroundColor","palette","white","overflow","EmailList","props","emails","onEmailOpen","onBack","className","rest","classes","selectedEmails","setSelectedEmails","handleSelectAll","map","email","id","handleDeselectAll","handleToggleOne","newSelectedEmails","includes","filter","push","length","propTypes","string","array","isRequired","func","onOpen"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/Mail/components/EmailList/EmailList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, List } from '@material-ui/core';\n\nimport { EmailToolbar, EmailItem } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.white,\n    overflow: 'hidden'\n  }\n}));\n\nconst EmailList = props => {\n  const { emails, onEmailOpen, onBack, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedEmails, setSelectedEmails] = useState([]);\n\n  const handleSelectAll = () => {\n    setSelectedEmails(emails.map(email => email.id));\n  };\n\n  const handleDeselectAll = () => {\n    setSelectedEmails([]);\n  };\n\n  const handleToggleOne = id => {\n    setSelectedEmails(selectedEmails => {\n      let newSelectedEmails = [...selectedEmails];\n\n      if (newSelectedEmails.includes(id)) {\n        return newSelectedEmails.filter(email => email !== id);\n      } else {\n        newSelectedEmails.push(id);\n\n        return newSelectedEmails;\n      }\n    });\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <EmailToolbar\n        onBack={onBack}\n        onDeselectAll={handleDeselectAll}\n        onSelectAll={handleSelectAll}\n        selectedEmails={selectedEmails}\n        totalEmails={emails.length}\n      />\n      <Divider />\n      <List disablePadding>\n        {emails.map(email => (\n          <EmailItem\n            email={email}\n            key={email.id}\n            onOpen={onEmailOpen}\n            onToggle={() => handleToggleOne(email.id)}\n            selected={selectedEmails.includes(email.id)}\n          />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nEmailList.propTypes = {\n  className: PropTypes.string,\n  emails: PropTypes.array.isRequired,\n  onBack: PropTypes.func,\n  onOpen: PropTypes.func\n};\n\nexport default EmailList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}