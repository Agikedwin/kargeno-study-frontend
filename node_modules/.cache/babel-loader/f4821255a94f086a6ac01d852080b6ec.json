{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/components/AuthGuard/AuthGuard.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useRouter from 'utils/useRouter';\n\n// Example of user roles: ['GUEST', 'USER', 'ADMIN'];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthGuard = props => {\n  _s();\n  const {\n    roles,\n    children\n  } = props;\n  const session = useSelector(state => state.session);\n  const router = useRouter();\n  useEffect(() => {\n    if (!session.loggedIn || !session.user) {\n      router.history.push('/auth/login');\n      return;\n    }\n    if (!roles.includes(session.user.role)) {\n      router.history.push('/errors/error-401');\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [router]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthGuard, \"r7bqlHID22IY+Vew4In8drV1Tw4=\", false, function () {\n  return [useSelector, useRouter];\n});\n_c = AuthGuard;\nAuthGuard.propTypes = {\n  children: PropTypes.node,\n  roles: PropTypes.array.isRequired\n};\nAuthGuard.defaultProps = {\n  roles: []\n};\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["React","Fragment","useEffect","useSelector","PropTypes","useRouter","AuthGuard","props","roles","children","session","state","router","loggedIn","user","history","push","includes","role","propTypes","node","array","isRequired","defaultProps"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/components/AuthGuard/AuthGuard.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport useRouter from 'utils/useRouter';\n\n// Example of user roles: ['GUEST', 'USER', 'ADMIN'];\n\nconst AuthGuard = props => {\n  const { roles, children } = props;\n\n  const session = useSelector(state => state.session);\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!session.loggedIn || !session.user) {\n      router.history.push('/auth/login');\n      return;\n    }\n\n    if (!roles.includes(session.user.role)) {\n      router.history.push('/errors/error-401');\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [router]);\n\n  return <Fragment>{children}</Fragment>;\n};\n\nAuthGuard.propTypes = {\n  children: PropTypes.node,\n  roles: PropTypes.array.isRequired\n};\n\nAuthGuard.defaultProps = {\n  roles: []\n};\n\nexport default AuthGuard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,SAAS,MAAM,iBAAiB;;AAEvC;AAAA;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAEjC,MAAMG,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAO,CAAC;EACnD,MAAME,MAAM,GAAGP,SAAS,EAAE;EAE1BH,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,OAAO,CAACG,QAAQ,IAAI,CAACH,OAAO,CAACI,IAAI,EAAE;MACtCF,MAAM,CAACG,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;MAClC;IACF;IAEA,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACP,OAAO,CAACI,IAAI,CAACI,IAAI,CAAC,EAAE;MACtCN,MAAM,CAACG,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;IAC1C;;IAEA;EACF,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBAAO,QAAC,QAAQ;IAAA,UAAEH;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAY;AACxC,CAAC;AAAC,GApBIH,SAAS;EAAA,QAGGH,WAAW,EACZE,SAAS;AAAA;AAAA,KAJpBC,SAAS;AAsBfA,SAAS,CAACa,SAAS,GAAG;EACpBV,QAAQ,EAAEL,SAAS,CAACgB,IAAI;EACxBZ,KAAK,EAAEJ,SAAS,CAACiB,KAAK,CAACC;AACzB,CAAC;AAEDhB,SAAS,CAACiB,YAAY,GAAG;EACvBf,KAAK,EAAE;AACT,CAAC;AAED,eAAeF,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}