{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client/src/views/UserDetails/components/Summary/Summary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { CustomerInfo, Invoices, SendEmails, OtherActions } from './components';\nimport { useRouteMatch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst Summary = props => {\n  _s();\n  const {\n    className,\n    ...rest\n  } = props;\n  const {\n    match,\n    history\n  } = props;\n  const classes = useStyles();\n  const [customer, setCustomer] = useState();\n  console.log('The params', useRouteMatch); // 👉️ {userId: '4200'}\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchCustomer = () => {\n      axios.get('/api/management/customers/1/summary').then(response => {\n        if (mounted) {\n          setCustomer(response.data.summary);\n        }\n      });\n    };\n    fetchCustomer();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  if (!customer) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    ...rest,\n    className: clsx(classes.root, className),\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CustomerInfo, {\n        customer: customer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Invoices, {\n        customer: customer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(SendEmails, {\n        customer: customer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(OtherActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Summary, \"1hLVtoAgdkZfyn3+mNQvD9pCIzU=\", false, function () {\n  return [useStyles];\n});\n_c = Summary;\nSummary.propTypes = {\n  className: PropTypes.string\n};\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Grid","axios","CustomerInfo","Invoices","SendEmails","OtherActions","useRouteMatch","useStyles","root","Summary","props","className","rest","match","history","classes","customer","setCustomer","console","log","mounted","fetchCustomer","get","then","response","data","summary","propTypes","string"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/views/UserDetails/components/Summary/Summary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { CustomerInfo, Invoices, SendEmails, OtherActions } from './components';\nimport { useRouteMatch } from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Summary = props => {\n  const { className, ...rest } = props;\n  const { match, history } = props;\n\n  const classes = useStyles();\n  const [customer, setCustomer] = useState();\n  console.log('The params', useRouteMatch); // 👉️ {userId: '4200'}\n\n  useEffect(() => {\n    let mounted = true;\n    \n\n\n    const fetchCustomer = () => {\n      axios.get('/api/management/customers/1/summary').then(response => {\n        if (mounted) {\n          setCustomer(response.data.summary);\n        }\n      });\n    };\n\n    fetchCustomer();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <CustomerInfo customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <Invoices customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <SendEmails customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <OtherActions />\n      </Grid>\n    </Grid>\n  );\n};\n\nSummary.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Summary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}