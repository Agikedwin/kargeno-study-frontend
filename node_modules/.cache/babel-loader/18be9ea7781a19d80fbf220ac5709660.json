{"ast":null,"code":"var _jsxFileName = \"/home/agik/agik/projects/Studies/kargeno-client-v2/src/components/CodeBlock/CodeBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as Prism from 'prismjs';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst trimCode = input => {\n  const codeLines = input.split('\\n');\n  if (!codeLines[0].trim()) {\n    codeLines.shift();\n  }\n  if (!codeLines[codeLines.length - 1].trim()) {\n    codeLines.pop();\n  }\n  const indexOfFirstChar = codeLines[0].search(/\\S|$/);\n  let output = '';\n  codeLines.forEach((line, index) => {\n    output = output + line.substr(indexOfFirstChar, line.length);\n    if (index !== codeLines.length - 1) {\n      output = output + '\\n';\n    }\n  });\n  return output;\n};\nconst CodeBlock = props => {\n  _s();\n  const {\n    async,\n    source,\n    language,\n    className,\n    component: Component,\n    ...rest\n  } = props;\n  const ref = useRef(null);\n  const classes = useStyles();\n  useEffect(() => {\n    const highlight = () => {\n      Prism.highlightElement(ref.current, async);\n    };\n    highlight();\n  });\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    className: `language-${language}`,\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      ...rest,\n      className: clsx(classes.root, className),\n      ref: ref,\n      children: trimCode(source)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlock, \"tiSEZpWKigdvmRRNfkKJGrvKgto=\", false, function () {\n  return [useStyles];\n});\n_c = CodeBlock;\nCodeBlock.propTypes = {\n  async: PropTypes.bool,\n  className: PropTypes.string,\n  component: PropTypes.node,\n  language: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired\n};\nCodeBlock.defaultProps = {\n  component: 'code'\n};\nexport default CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useEffect","useRef","Prism","PropTypes","clsx","makeStyles","useStyles","root","trimCode","input","codeLines","split","trim","shift","length","pop","indexOfFirstChar","search","output","forEach","line","index","substr","CodeBlock","props","async","source","language","className","component","Component","rest","ref","classes","highlight","highlightElement","current","propTypes","bool","string","node","isRequired","defaultProps"],"sources":["/home/agik/agik/projects/Studies/kargeno-client-v2/src/components/CodeBlock/CodeBlock.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as Prism from 'prismjs';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst trimCode = input => {\n  const codeLines = input.split('\\n');\n\n  if (!codeLines[0].trim()) {\n    codeLines.shift();\n  }\n\n  if (!codeLines[codeLines.length - 1].trim()) {\n    codeLines.pop();\n  }\n\n  const indexOfFirstChar = codeLines[0].search(/\\S|$/);\n\n  let output = '';\n\n  codeLines.forEach((line, index) => {\n    output = output + line.substr(indexOfFirstChar, line.length);\n\n    if (index !== codeLines.length - 1) {\n      output = output + '\\n';\n    }\n  });\n\n  return output;\n};\n\nconst CodeBlock = props => {\n  const {\n    async,\n    source,\n    language,\n    className,\n    component: Component,\n    ...rest\n  } = props;\n\n  const ref = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const highlight = () => {\n      Prism.highlightElement(ref.current, async);\n    };\n\n    highlight();\n  });\n\n  return (\n    <pre className={`language-${language}`}>\n      <Component\n        {...rest}\n        className={clsx(classes.root, className)}\n        ref={ref}\n      >\n        {trimCode(source)}\n      </Component>\n    </pre>\n  );\n};\n\nCodeBlock.propTypes = {\n  async: PropTypes.bool,\n  className: PropTypes.string,\n  component: PropTypes.node,\n  language: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired\n};\n\nCodeBlock.defaultProps = {\n  component: 'code'\n};\n\nexport default CodeBlock;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,SAAS;AAChC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAE/C,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;EAClCE,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EACxB,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC;EAEnC,IAAI,CAACD,SAAS,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE,EAAE;IACxBF,SAAS,CAACG,KAAK,EAAE;EACnB;EAEA,IAAI,CAACH,SAAS,CAACA,SAAS,CAACI,MAAM,GAAG,CAAC,CAAC,CAACF,IAAI,EAAE,EAAE;IAC3CF,SAAS,CAACK,GAAG,EAAE;EACjB;EAEA,MAAMC,gBAAgB,GAAGN,SAAS,CAAC,CAAC,CAAC,CAACO,MAAM,CAAC,MAAM,CAAC;EAEpD,IAAIC,MAAM,GAAG,EAAE;EAEfR,SAAS,CAACS,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACjCH,MAAM,GAAGA,MAAM,GAAGE,IAAI,CAACE,MAAM,CAACN,gBAAgB,EAAEI,IAAI,CAACN,MAAM,CAAC;IAE5D,IAAIO,KAAK,KAAKX,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;MAClCI,MAAM,GAAGA,MAAM,GAAG,IAAI;IACxB;EACF,CAAC,CAAC;EAEF,OAAOA,MAAM;AACf,CAAC;AAED,MAAMK,SAAS,GAAGC,KAAK,IAAI;EAAA;EACzB,MAAM;IACJC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,SAAS,EAAEC,SAAS;IACpB,GAAGC;EACL,CAAC,GAAGP,KAAK;EAET,MAAMQ,GAAG,GAAG/B,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMgC,OAAO,GAAG3B,SAAS,EAAE;EAE3BN,SAAS,CAAC,MAAM;IACd,MAAMkC,SAAS,GAAG,MAAM;MACtBhC,KAAK,CAACiC,gBAAgB,CAACH,GAAG,CAACI,OAAO,EAAEX,KAAK,CAAC;IAC5C,CAAC;IAEDS,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAG,YAAWP,QAAS,EAAE;IAAA,uBACrC,QAAC,SAAS;MAAA,GACJI,IAAI;MACR,SAAS,EAAE3B,IAAI,CAAC6B,OAAO,CAAC1B,IAAI,EAAEqB,SAAS,CAAE;MACzC,GAAG,EAAEI,GAAI;MAAA,UAERxB,QAAQ,CAACkB,MAAM;IAAC;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,GAhCIH,SAAS;EAAA,QAWGjB,SAAS;AAAA;AAAA,KAXrBiB,SAAS;AAkCfA,SAAS,CAACc,SAAS,GAAG;EACpBZ,KAAK,EAAEtB,SAAS,CAACmC,IAAI;EACrBV,SAAS,EAAEzB,SAAS,CAACoC,MAAM;EAC3BV,SAAS,EAAE1B,SAAS,CAACqC,IAAI;EACzBb,QAAQ,EAAExB,SAAS,CAACoC,MAAM,CAACE,UAAU;EACrCf,MAAM,EAAEvB,SAAS,CAACoC,MAAM,CAACE;AAC3B,CAAC;AAEDlB,SAAS,CAACmB,YAAY,GAAG;EACvBb,SAAS,EAAE;AACb,CAAC;AAED,eAAeN,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}