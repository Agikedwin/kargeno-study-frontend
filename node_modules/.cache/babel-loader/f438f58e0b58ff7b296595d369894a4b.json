{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n//import { initialState } from 'react-doc-viewer/build/state/reducer';\n\nconst organizationSlice = createSlice({\n  name: 'org',\n  initialState: {\n    initOrganization: {\n      /*  name: '',\n      email: '',\n      address: {\n        postalCode: '',\n        town: '',\n        postalAddress: ''\n      },\n      phone: {\n        countryCode: '',\n        phoneNumber: '',\n      }, */\n    }\n  },\n  intMessages: {\n    message: 'No data available'\n  },\n  initialState1: {\n    showMessages: false\n  },\n  reducers: {\n    createOrganization(state, action) {\n      state.initOrganization = action.payload;\n    },\n    /* createOrganization(state= initialState, action) {\n      return {\n        ...state.initialState = action.payloads\n      }\n      \n    }, */\n    showMessages(state, action) {\n      state.intMessages = action.payload;\n    }\n  }\n});\nexport const organizationActions = organizationSlice.actions;\nexport default organizationSlice;","map":{"version":3,"names":["createSlice","organizationSlice","name","initialState","initOrganization","intMessages","message","initialState1","showMessages","reducers","createOrganization","state","action","payload","organizationActions","actions"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/store/organization-slice.js"],"sourcesContent":["import { createSlice  } from '@reduxjs/toolkit';\n//import { initialState } from 'react-doc-viewer/build/state/reducer';\n\nconst organizationSlice = createSlice({\n  name: 'org',\n  initialState: {\n    initOrganization:{\n      /*  name: '',\n      email: '',\n      address: {\n        postalCode: '',\n        town: '',\n        postalAddress: ''\n      },\n      phone: {\n        countryCode: '',\n        phoneNumber: '',\n      }, */\n    }\n  },\n  intMessages :{\n    message:'No data available'\n\n  },\n\n  initialState1:{\n    showMessages: false\n  },\n\n\n  reducers: {\n\n    createOrganization(state,action) {\n      state.initOrganization = action.payload;\n      \n    },\n    \n    /* createOrganization(state= initialState, action) {\n      return {\n        ...state.initialState = action.payloads\n      }\n      \n    }, */\n    showMessages(state, action) {\n      state.intMessages = action.payload\n    }\n    \n\n  }\n\n\n})\nexport const organizationActions  = organizationSlice.actions;\nexport default organizationSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAS,kBAAkB;AAC/C;;AAEA,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,gBAAgB,EAAC;MACf;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVM;EAYJ,CAAC;EACDC,WAAW,EAAE;IACXC,OAAO,EAAC;EAEV,CAAC;EAEDC,aAAa,EAAC;IACZC,YAAY,EAAE;EAChB,CAAC;EAGDC,QAAQ,EAAE;IAERC,kBAAkB,CAACC,KAAK,EAACC,MAAM,EAAE;MAC/BD,KAAK,CAACP,gBAAgB,GAAGQ,MAAM,CAACC,OAAO;IAEzC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IACIL,YAAY,CAACG,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO;IACpC;EAGF;AAGF,CAAC,CAAC;AACF,OAAO,MAAMC,mBAAmB,GAAIb,iBAAiB,CAACc,OAAO;AAC7D,eAAed,iBAAiB"},"metadata":{},"sourceType":"module"}