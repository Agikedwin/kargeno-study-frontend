{"ast":null,"code":"import gql from 'graphql-tag';\n\n//  login mutation\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!, $otp: Int!) {\n    login(username: $username, password: $password, otp: $otp) {\n      token\n      refreshToken\n      payload\n      refreshExpiresIn\n    }\n  }\n`;\nexport const REGISTER_USER2 = gql`\n\nmutation register( $username: String!,  $email:String!,  $password:String!,  $confirmPassword:String!){\n  register(registerInput: \n  {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword})\n  {\n    username email id, token\n  }\n}\n\n`;","map":{"version":3,"names":["gql","LOGIN","REGISTER_USER2"],"sources":["/home/agik/agik/projects/Studies/kargeno-client/src/graphql/mutations/users.js"],"sourcesContent":["import gql from 'graphql-tag';\n\n\n\n//  login mutation\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!, $otp: Int!) {\n    login(username: $username, password: $password, otp: $otp) {\n      token\n      refreshToken\n      payload\n      refreshExpiresIn\n    }\n  }\n`;\n\nexport const  REGISTER_USER2 = gql`\n\nmutation register( $username: String!,  $email:String!,  $password:String!,  $confirmPassword:String!){\n  register(registerInput: \n  {username: $username, email: $email, password: $password, confirmPassword: $confirmPassword})\n  {\n    username email id, token\n  }\n}\n\n`\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;;AAI7B;AACA,OAAO,MAAMC,KAAK,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAOE,cAAc,GAAGF,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module"}